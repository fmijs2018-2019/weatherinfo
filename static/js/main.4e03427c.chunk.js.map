{"version":3,"sources":["common/common.ts","Layout/components/NavigationBar.tsx","Layout/index.tsx","api/GoogleApi.ts","scenes/HomeScene/components/CitySearchBar.tsx","api/apiConfig.ts","common/localStorageService.ts","api/WeatherApi.ts","components/WeatherIcon.tsx","components/FormattedTemperature.tsx","components/FormattedMainWeather.tsx","components/ListWeatherItem.tsx","components/HeartToggleIcon.tsx","scenes/HomeScene/index.tsx","utils/getWindDirection.ts","scenes/CityScene/components/WeatherSummaryTable.tsx","scenes/CityScene/components/WeatherSwiperItem.tsx","scenes/CityScene/components/WeatherSwiper.tsx","scenes/CityScene/components/ChartsNavBar.tsx","scenes/CityScene/components/TempComposedChart.tsx","scenes/CityScene/components/WindLineChart.tsx","scenes/CityScene/components/PressureComposedChart.tsx","scenes/CityScene/components/PrecipitationAriaChart.tsx","scenes/CityScene/components/ChartsComponent.tsx","common/formatDate.ts","scenes/CityScene/index.tsx","scenes/MapScene/components/ContinentsDropdown.tsx","scenes/MapScene/components/WorldMap.tsx","scenes/MapScene/components/CitiesList.tsx","scenes/MapScene/components/CitiesPagination.tsx","scenes/MapScene/components/CountryInfoPanel.tsx","scenes/MapScene/index.tsx","scenes/PreferencesScene/components/PreferencesNavBar.tsx","components/DeleteFromFavouritesModal.tsx","scenes/PreferencesScene/components/FavouritesSection.tsx","components/ResetSettingsModal.tsx","scenes/PreferencesScene/components/SettingsSection.tsx","scenes/PreferencesScene/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NavigationBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleItemClick","event","obj","history","push","concat","name","activeItem","location","pathname","slice","react","Menu","size","pointing","secondary","Item","header","color","active","onClick","index_es","id","defaultMessage","position","React","withRouter","Layout","_React$Component","apply","arguments","inherits","createClass","key","value","components_NavigationBar","children","autocompleteService","window","google","maps","places","AutocompleteService","GoogleApi","getPlacesAutocomplete","input","callback","request","types","getPlacePredictions","Alpha2Dictionary","Alpha3Dictionary","CountryDictionary","i","CountriesList","length","alpha2","alpha3","country","CountryHelperMethods","convertCountryToAlpha2","countryName","fullMatch","undefined","_convertCountryToCountryCode","convertCountrytoAlpha3","convertAlpha3ToAlpha2","ind","convertAlpha2ToAlpha3","code","index","matches","result","includes","getOpenWeatherMapCitiesByCountryAlpha2","skip","take","Promise","resove","reject","citiesList","CitiesDictionary","takeLimited","Math","min","start","max","end","map","v","n","OWMCountriesList","find","x","list","total","citySearchBarMessages","defineMessages","searchPlaceholder","CitySearchBarInternal","autocompletePlaces","predictions","placesList","filter","structured_formatting","secondary_text","fragments","split","toLowerCase","flag","text","description","main_text","setState","loading","getLocation","navigator","geolocation","getCurrentPosition","getLocationCallback","alert","onGetLocation","autocompletePlacesDebounced","_","debounce","onSearchChange","_data","target","onChange","data","city","onSelect","state","_this$state","intl","Segment","basic","textAlign","Dropdown","style","minWidth","icon","selectOnNavigation","direction","placeholder","formatMessage","fluid","search","selection","options","Divider","horizontal","Button","Icon","CitySearchBar","injectIntl","apiConfig","mainApiUrl","currentWeatherPath","fiveDaysThreeHoursWeatherPath","appid","imgUrl","addToFavourites","cityId","favourites","favouritesStr","localStorage","getItem","JSON","parse","indexOf","setItem","stringify","removeFromFavourites","indexOfCity","splice","checkIfInFavourites","getFavourites","getSettingsOrDefault","settingsStr","language","tempMetric","hoursFormat","setSettings","settings","resetSettings","defaultSettings","weatherApi","_getDefaultParams","units","lang","url","config","params","objectSpread","q","axios","get","then","response","lon","lat","WeatherIcon","src","FormattedTemperature","tempFormat","toUpperCase","react_default","a","createElement","temp","FormattedMainWeather","weatherId","ListWeatherItem","_props$currentWeather","currentWeather","weather","main","wind","clouds","coord","sys","className","display","justifyContent","FormattedMainWeather_FormattedMainWeather","react_router_dom","to","Flag","toLocaleLowerCase","fontWeight","components_FormattedTemperature","temp_min","temp_max","href","speed","all","humidity","pressure","height","alignItems","iconButton","HeartToggleIcon","iconName","padding","backgroundColor","HomeScene","componentDidMount","promises","getCurrentWeatherByName","weatherItems","cityWeatherItems","onSearchValueChange","res","cityNotFound","catch","error","onToggleIconClick","getCurrentWeatherByLocation","coords","longitude","latitude","_this2","Message","ListWeatherItem_ListWeatherItem","HeartToggleIcon_HeartToggleIcon","getWindDirection","degrees","val","floor","WeatherSummaryTable","mainWeather","rain","snow","shortWeather","_props$currentWeather2","_shortWeather$","fontSize","marginTop","paddingLeft","Table","celled","striped","unstackable","Body","Row","Cell","deg","WeatherSwiperItem","_props$weather","windSpeed","date","Date","weekday","day","month","Label","WeatherSwiper","items","ReactIdSwiper_full_default","assign","slidesPerView","spaceBetween","pagination","el","clickable","navigation","nextEl","prevEl","breakpoints","900","600","shouldSwiperUpdate","rebuildOnUpdate","WeatherSwiperItem_WeatherSwiperItem","ChartNavBar","Fragment","e","CustomTooltipp","payload","border","average","TempComposedChart","unit","width","es6","margin","top","right","left","bottom","strokeDasharray","dataKey","content","TempComposedChart_CustomTooltipp","type","x1","y1","x2","y2","offset","stopColor","stopOpacity","stroke","fillOpacity","fill","CustomTooltip","WindLineChart","WindLineChart_CustomTooltip","grndLevel","seaLevel","PressureComposedChart","domain","PressureComposedChart_CustomTooltip","PrecipitationAriaChart","PrecipitationAriaChart_CustomTooltip","ChartsComponent","_this$props","chartsData","fiveDaysThreeHoursWeather","tempChartData","pressureChartData","precipitationChartData","windChartData","weatherItem","forEach","hours","getHours","minutes","getMinutes","ampm","formatDate","dt_txt","grnd_level","sea_level","handleChartsNavBarClick","activeChart","render","ChartsNavBar","TempComposedChart_TempComposedChart","WindLineChart_WindLineChart","PressureComposedChart_PressureComposedChart","PrecipitationAriaChart_PrecipitationAriaChart","CityScene","match","currentWeatherPromise","getCurrentWeatherById","fiveDaysThreeHoursWeatherPromise","getFiveDaysThreeHoursWeather","_ref","_ref2","slicedToArray","grouped","groupBy","dt","getDate","swiperItemsData","keys","perDayList","minTemp","minBy","maxTemp","maxBy","round","meanBy","toFixed","isInFavourites","Header","as","substring","float","WeatherSummaryTable_WeatherSummaryTable","ChartsComponent_ChartsComponent","WeatherSwiper_WeatherSwiper","messages","dropdownText","ContinentsDropdown","onContinentSelect","classes","classNames","styles","background","button","labeled","floating","WorldMap","onCountryClick","timeout","setTimeout","ReactTooltip","rebuild","clearTimeout","mapStyle","defaultStyle","hoverStyle","pressedStyle","zoomProp","zoom","_defaultStyle","strokeWidth","outline","_hoverStyle","_pressedStyle","react_motion","y","spring","stiffness","damping","lib","projectionConfig","scale","center","disablePanning","geography","geographies","projection","data-tip","properties","default","hover","pressed","dist_default","Component","CitiesList","List","divided","relaxed","cities","c","Content","Description","CitiesPagination","activePage","totalPages","onPageChange","disabled","CoutnryInfoPanel","onClose","CitiesList_CitiesList","CitiesPagination_CitiesPagination","MapScene","citiesPerPage","handleContinentClick","item","countryClick","onPanelClose","page","itemsList","WorldMap_WorldMap","maxHeight","CountryInfoPanel_CoutnryInfoPanel","PreferencesNavBar","DeleteFromFavouritesModal","showModal","onConfirm","Modal","open","closeOnDimmerClick","Actions","inverted","FavouritesSection","onModalClose","cityIdForDelete","onTrashButtonClick","onModalConfirm","deleteFromFavourites","favouritesWeather","Pagination","prevItem","nextItem","d","defaultActivePage","firstItem","lastItem","DeleteFromFavouritesModal_DeleteFromFavouritesModal","ResetSettingsModal","SettingsSection","handleLanguageChange","isApplyDisabled","handleTempMetricChange","_this$state2","handleHoursFormatChange","_this$state3","onReset","onResetCancel","onResetConfirm","onLocaleChange","onApply","_this$state4","_this$state5","Group","Or","floated","ResetSettingsModal_ResetSettingsModal","PreferencesScene","itemsPerPage","removeCityFromFavouritesList","favouritesCount","ceil","pageItems","cityWeather","onNavBarItemClick","activeTab","_this3","components_PreferencesNavBar","FavouritesSection_FavouritesSection","SettingsSection_SettingsSection","App","Layout_Layout","react_router","exact","path","component","PreferencesScene_PreferencesScene","Boolean","hostname","bg","messages_bg","en","messages_en","addLocaleData","toConsumableArray","locale_en","locale_bg","StatefulIntlProvider","locale","src_App_0","ReactDOM","src_StatefulIntlProvider","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e03427c.chunk.js","sourcesContent":["import _ from \"lodash\";\r\nimport CountriesList from \"./CountriesList.json\";\r\nimport CitiesDictionary from \"./CitiesList.json\";\r\nimport OWMCountriesList from './OWMCountriesList.json';\r\n\r\nconst Alpha2Dictionary: _.Dictionary<number> = {};\r\nconst Alpha3Dictionary: _.Dictionary<number> = {};\r\nconst CountryDictionary: _.Dictionary<number> = {};\r\n\r\nfor (let i = 0; i < CountriesList.length; i++) {\r\n\tconst alpha2 = CountriesList[i][\"alpha-2\"];\r\n\tconst alpha3 = CountriesList[i][\"alpha-3\"];\r\n\tconst country = CountriesList[i][\"name\"];\r\n\tAlpha2Dictionary[alpha2] = i;\r\n\tAlpha3Dictionary[alpha3] = i;\r\n\tCountryDictionary[country] = i;\r\n}\r\n\r\nexport const CountryHelperMethods = {\r\n\tconvertCountryToAlpha2 (countryName: string, fullMatch: boolean = true) {\r\n\t\treturn this._convertCountryToCountryCode(countryName, \"alpha-2\", fullMatch);\r\n\t},\r\n\tconvertCountrytoAlpha3 (countryName: string, fullMatch = true) {\r\n\t\treturn this._convertCountryToCountryCode(countryName, \"alpha-3\", fullMatch);\r\n\t},\r\n\tconvertAlpha3ToAlpha2 (alpha3: string) {\r\n\t\tconst ind = Alpha3Dictionary[alpha3];\r\n\t\treturn ind !== undefined\r\n\t\t\t? CountriesList[ind][\"alpha-2\"]\r\n\t\t\t: undefined;\r\n\t},\r\n\tconvertAlpha2ToAlpha3 (alpha2: string) {\r\n\t\tconst ind = Alpha3Dictionary[alpha2];\r\n\t\treturn ind !== undefined\r\n\t\t\t? CountriesList[ind][\"alpha-3\"]\r\n\t\t\t: undefined;\r\n\t},\r\n\t_convertCountryToCountryCode(countryName: string, code: \"alpha-2\" | \"alpha-3\", fullMatch: boolean) {\r\n\t\tif (countryName === \"USA\") {\r\n\t\t\treturn code === \"alpha-2\" ? \"US\" : \"USA\";\r\n\t\t} else if (countryName === \"UK\") {\r\n\t\t\treturn code === \"alpha-2\" ? \"GB\" : \"GBR\";\r\n\t\t}\r\n\t\t\r\n\t\tconst index = CountryDictionary[countryName];\r\n\t\tif(index !== undefined) {\r\n\t\t\treturn CountriesList[index][code];\r\n\t\t}\r\n\r\n\t\tif (fullMatch) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tlet matches = 0;\r\n\t\tlet result = undefined;\r\n\t\tfor (let i = 0; i < CountriesList.length; i++) {\r\n\t\t\tif (matches > 1) {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t\tconst name = CountriesList[i][\"name\"];\r\n\t\t\tif (name.includes(countryName)) {\r\n\t\t\t\tresult = CountriesList[i][code];\r\n\t\t\t\tmatches++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport interface IOWMCity {\r\n\tid: number;\r\n\tname: string;\r\n}\r\n\r\nexport interface IOWMCountry {\r\n\tid: number;\r\n\tname: string;\r\n\tcountry: string;\r\n}\r\n\r\nexport interface IOWMCitiesByCountry {\r\n\ttotal: number;\r\n\tlist: IOWMCity[];\r\n\tcountry?: IOWMCountry;\r\n}\r\n\r\nexport const getOpenWeatherMapCitiesByCountryAlpha2 = (alpha2: string, skip: number, take: number): Promise<IOWMCitiesByCountry> => {\r\n\treturn new Promise((resove, reject) => {\r\n\t\tconst citiesList = (CitiesDictionary as any)[alpha2] as any[];\r\n\t\tif (!citiesList) {\r\n\t\t\treject(`No results for found for: ${alpha2}`);\r\n\t\t}\r\n\t\tconst takeLimited = Math.min(take, 200);\r\n\t\tconst start = Math.max(0, skip);\r\n\t\tconst end = Math.min(citiesList.length, start + takeLimited);\r\n\t\tconst result = citiesList\r\n\t\t\t.slice(start, end)\r\n\t\t\t.map(v => ({\r\n\t\t\t\tid: v.i,\r\n\t\t\t\tname: v.n,\r\n\t\t\t}));\r\n\r\n\t\tconst country = OWMCountriesList.find(x => x.country === alpha2);\r\n\r\n\t\tresove({\r\n\t\t\tlist: result,\r\n\t\t\ttotal: citiesList.length,\r\n\t\t\tcountry\r\n\t\t});\r\n\t})\r\n}","import * as React from 'react';\r\nimport { Menu, MenuItemProps } from 'semantic-ui-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\ninterface INavigationBarProps extends RouteComponentProps { }\r\n\r\nclass NavigationBar extends React.Component<INavigationBarProps> {\r\n\tconstructor(props: Readonly<INavigationBarProps>) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\thandleItemClick = (event: any, obj: MenuItemProps) => {\r\n\t\tthis.props.history.push(`/${obj.name}`);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst activeItem = this.props.history.location.pathname.slice(1);\r\n\r\n\t\treturn (\r\n\t\t\t<Menu size='huge' pointing secondary >\r\n\t\t\t\t<Menu.Item header>WeatherInfo</Menu.Item>\r\n\t\t\t\t<Menu.Item name='home' color='teal' active={activeItem === 'home'} onClick={this.handleItemClick}>\r\n\t\t\t\t\t<FormattedMessage id=\"nav.home\" defaultMessage=\"Home\"/>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item name='map' color='teal' active={activeItem === 'map'} onClick={this.handleItemClick} >\r\n\t\t\t\t\t<FormattedMessage id=\"nav.map\" defaultMessage=\"Map\"/>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t{/* <Menu.Item name='about' color='teal' active={activeItem === 'about'} onClick={this.handleItemClick}>\r\n\t\t\t\t\t<FormattedMessage id=\"nav.about\" defaultMessage=\"About\" />\r\n\t\t\t\t</Menu.Item> */}\r\n\t\t\t\t<Menu.Item position=\"right\" name='preferences' color='teal' active={activeItem === 'preferences'} onClick={this.handleItemClick}>\r\n\t\t\t\t\t<FormattedMessage id=\"nav.preferences\" defaultMessage=\"Preferences\" />\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t</Menu>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withRouter(NavigationBar);\r\n","import * as React from 'react';\r\nimport NavigationBar from './components/NavigationBar';\r\n\r\ninterface ILayoutProps {\r\n}\r\n\r\nexport class Layout extends React.Component<ILayoutProps> {\r\n\r\n    render() {\r\n        return <div>\r\n\t\t\t<NavigationBar></NavigationBar>\r\n            <main>\r\n                {this.props.children}\r\n            </main>\r\n        </div>;\r\n    }\r\n}\r\n","import { Prediction } from '../models/IPlacesAutocompleteResponse';\r\n\r\nconst autocompleteService = new (window as any).google.maps.places.AutocompleteService();\r\n\r\nexport default {\r\n\tgetPlacesAutocomplete (input: string, callback: (predictions: Prediction[]) => void) {\r\n\t\tconst request = {\r\n\t\t\tinput,\r\n\t\t\ttypes: [ \"(cities)\" ],\r\n\t\t};\r\n\t\tautocompleteService.getPlacePredictions(request, callback);\r\n\t}\r\n}","import * as React from 'react';\r\nimport { Segment, Divider, Button, Dropdown, Icon } from 'semantic-ui-react';\r\nimport _ from \"lodash\";\r\nimport GoogleApi from '../../../api/GoogleApi';\r\nimport { Prediction } from '../../../models/IPlacesAutocompleteResponse';\r\nimport { CountryHelperMethods } from '../../../common/common';\r\nimport { defineMessages, injectIntl, InjectedIntlProps, FormattedDate, FormattedMessage } from 'react-intl';\r\n\r\nconst citySearchBarMessages = defineMessages({\r\n\tsearchPlaceholder: {\r\n\t\tid: 'search.placeholder',\r\n\t\tdefaultMessage: 'Search city...'\r\n\t}\r\n})\r\n\r\ninterface ICitySearchBarProps extends InjectedIntlProps {\r\n\tonSelect: (city: string, code: string) => void\r\n\tonGetLocation?: (position: Position) => void;\r\n}\r\n\r\ninterface ICitySearchBarState {\r\n\tloading: boolean;\r\n\tplacesList: any[];\r\n}\r\n\r\nclass CitySearchBarInternal extends React.Component<ICitySearchBarProps, ICitySearchBarState> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { loading: false, placesList: [] };\r\n\t}\r\n\r\n\r\n\tautocompletePlaces = (input: string) => {\r\n\t\tconst callback: any = (predictions: Prediction[]) => {\r\n\t\t\tconst placesList = (predictions || [])\r\n\t\t\t\t.filter(v => v.structured_formatting && v.structured_formatting.secondary_text)\r\n\t\t\t\t.map(v => {\r\n\t\t\t\t\tconst fragments = v.structured_formatting.secondary_text.split(', ');\r\n\t\t\t\t\tconst country = fragments[fragments.length - 1];\r\n\t\t\t\t\tconst codeUpper = CountryHelperMethods.convertCountryToAlpha2(country, false) || \"\";\r\n\t\t\t\t\tconst code = codeUpper.toLowerCase();\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tflag: code,\r\n\t\t\t\t\t\tkey: v.id,\r\n\t\t\t\t\t\ttext: v.description,\r\n\t\t\t\t\t\tvalue: v.structured_formatting.main_text + \";\" + code + \";\" + v.id,\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\tthis.setState({ loading: false, placesList: placesList });\r\n\t\t}\r\n\t\tGoogleApi.getPlacesAutocomplete(input, callback);\r\n\t}\r\n\r\n\tgetLocation = () => {\r\n\t\tif (navigator.geolocation) {\r\n\t\t\tnavigator.geolocation.getCurrentPosition(this.getLocationCallback);\r\n\t\t} else {\r\n\t\t\talert(\"Geolocation is not supported by this browser.\");\r\n\t\t}\r\n\t}\r\n\r\n\tgetLocationCallback = (position: Position) => {\r\n\t\tconst { onGetLocation } = this.props;\r\n\t\tif (onGetLocation) {\r\n\t\t\tonGetLocation(position);\r\n\t\t}\r\n\t}\r\n\r\n\tautocompletePlacesDebounced = _.debounce(this.autocompletePlaces, 250);\r\n\r\n\tonSearchChange = (event: any, _data: any) => {\r\n\t\tif (event.target.value.length > 1) {\r\n\t\t\tthis.setState({ loading: true, placesList: [] });\r\n\t\t\tthis.autocompletePlacesDebounced(event.target.value);\r\n\t\t}\r\n\t}\r\n\r\n\tonChange = (event: any, data: any) => {\r\n\t\tconst value = (data.value as string).split(';');\r\n\t\tconst city = value[0];\r\n\t\tconst code = value[1];\r\n\r\n\t\tthis.props.onSelect(city, code);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { placesList, loading } = this.state;\r\n\t\tconst { intl } = this.props;\r\n\r\n\t\treturn <Segment size='large' basic textAlign='center'>\r\n\t\t\t<Dropdown\r\n\t\t\t\tstyle={{ minWidth: 400 }}\r\n\t\t\t\ticon='search'\r\n\t\t\t\tselectOnNavigation={false}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\tdirection=\"right\"\r\n\t\t\t\tplaceholder={intl.formatMessage(citySearchBarMessages.searchPlaceholder)}\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t\tonSearchChange={this.onSearchChange}\r\n\t\t\t\tfluid\r\n\t\t\t\tsearch\r\n\t\t\t\tselection\r\n\t\t\t\toptions={placesList}\r\n\t\t\t\tonChange={this.onChange}\r\n\t\t\t/>\r\n\t\t\t<Divider horizontal>\r\n\t\t\t\t<FormattedMessage id=\"common.or\" defaultMessage=\"Or\" />\r\n\t\t\t</Divider>\r\n\t\t\t<Button\r\n\t\t\t\tcolor='teal'\r\n\t\t\t\tsize='large'\r\n\t\t\t\tonClick={this.getLocation} >\r\n\t\t\t\t<Icon name='map marker alternate' />\r\n\t\t\t\t<FormattedMessage id=\"search.your_location\" defaultMessage=\"Your location\"/>\r\n\t\t\t</Button>\r\n\t\t</Segment>;\r\n\t}\r\n}\r\n\r\nexport const CitySearchBar = injectIntl(CitySearchBarInternal);","export default {\r\n\tmainApiUrl: 'https://api.openweathermap.org/data/2.5',\r\n\tcurrentWeatherPath: '/weather',\r\n\tfiveDaysThreeHoursWeatherPath: '/forecast',\r\n\tappid: 'd856f0f4053d9762636ad75b01af9894',\r\n\timgUrl: 'http://openweathermap.org/img/w'\r\n}\r\n","import { ISettings } from \"../models/ISettings\";\r\n\r\nexport const addToFavourites = (cityId: number) => {\r\n\tlet favouritesStr = localStorage.getItem('favourites');\r\n\tlet favourites: number[];\r\n\r\n\tif (favouritesStr) {\r\n\t\tfavourites = JSON.parse(favouritesStr);\r\n\t\tconst indexOfCity = favourites.indexOf(cityId);\r\n\r\n\t\tif (indexOfCity < 0) {\r\n\t\t\tfavourites.push(cityId);\r\n\t\t}\r\n\t} else {\r\n\t\tfavourites = [cityId];\r\n\t}\r\n\r\n\tlocalStorage.setItem('favourites', JSON.stringify(favourites));\r\n}\r\n\r\nexport const removeFromFavourites = (cityId: number) => {\r\n\tlet favouritesStr = localStorage.getItem('favourites');\r\n\tlet favourites: number[];\r\n\r\n\tif (favouritesStr) {\r\n\t\tfavourites = JSON.parse(favouritesStr);\r\n\t\tconst indexOfCity = favourites.indexOf(cityId);\r\n\r\n\t\tif (indexOfCity >= 0) {\r\n\t\t\tfavourites.splice(indexOfCity, 1);\r\n\t\t\tlocalStorage.setItem('favourites', JSON.stringify(favourites));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const checkIfInFavourites = (cityId: number) => {\r\n\tlet favouritesStr = localStorage.getItem('favourites');\r\n\tlet favourites: number[];\r\n\r\n\tif (favouritesStr) {\r\n\t\tfavourites = JSON.parse(favouritesStr);\r\n\t\treturn favourites.indexOf(cityId) >= 0;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\nexport const getFavourites = () => {\r\n\tlet favouritesStr = localStorage.getItem('favourites');\r\n\r\n\treturn favouritesStr && JSON.parse(favouritesStr) || [];\r\n}\r\n\r\nexport const getSettingsOrDefault = (): ISettings => {\r\n\tlet settingsStr = localStorage.getItem('settings');\r\n\tconst defaultSettings: ISettings = {\r\n\t\tlanguage: 'en',\r\n\t\ttempMetric: 'c',\r\n\t\thoursFormat: '24'\r\n\t}\r\n\r\n\treturn settingsStr ? JSON.parse(settingsStr) : defaultSettings;\r\n}\r\n\r\nexport const setSettings = (settings: ISettings) => {\r\n\tif (settings) {\r\n\t\tlocalStorage.setItem('settings', JSON.stringify(settings));\r\n\t}\r\n}\r\n\r\nexport const resetSettings = () => {\r\n\tconst defaultSettings: ISettings = {\r\n\t\tlanguage: 'en',\r\n\t\ttempMetric: 'c',\r\n\t\thoursFormat: '24'\r\n\t}\r\n\tlocalStorage.setItem('settings', JSON.stringify(defaultSettings));\r\n\treturn defaultSettings;\r\n}\r\n","import axios, { AxiosRequestConfig } from 'axios';\r\nimport apiConfig from './apiConfig';\r\nimport { ICurrentWeather } from '../models/ICurrentWeather';\r\nimport { IFiveDaysThreeHoursWeather } from '../models/IFIveDaysThreeHoursWeather';\r\nimport { ISettings } from '../models/ISettings';\r\nimport { getSettingsOrDefault } from '../common/localStorageService';\r\n\r\nclass WeatherApi {\r\n\r\n\t_getDefaultParams = () => {\r\n\t\tconst settings: ISettings = getSettingsOrDefault();\r\n\t\tlet units = 'dummy';\r\n\t\tif (settings.tempMetric === 'f') {\r\n\t\t\tunits = \"imperial\";\r\n\t\t} else if (settings.tempMetric === \"c\") {\r\n\t\t\tunits = \"metric\";\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tunits,\r\n\t\t\tappid: apiConfig.appid,\r\n\t\t\tlang: settings.language\r\n\t\t}\r\n\t}\r\n\r\n\tgetCurrentWeatherByName(city: string) {\r\n\t\tconst url = `${apiConfig.mainApiUrl}${apiConfig.currentWeatherPath}`;\r\n\t\tconst config: AxiosRequestConfig = { params: { ...this._getDefaultParams(), q: city } }\r\n\t\treturn axios.get<ICurrentWeather>(url, config)\r\n\t\t\t.then(response => response.data);\r\n\t}\r\n\r\n\tgetCurrentWeatherByLocation(lon: number, lat: number) {\r\n\t\tconst url = `${apiConfig.mainApiUrl}${apiConfig.currentWeatherPath}`;\r\n\t\tconst config: AxiosRequestConfig = { params: { ...this._getDefaultParams(), lat, lon } }\r\n\t\treturn axios.get<ICurrentWeather>(url, config)\r\n\t\t\t.then(response => response.data);\r\n\t}\r\n\r\n\tgetCurrentWeatherById(cityId: number) {\r\n\t\tconst url = `${apiConfig.mainApiUrl}${apiConfig.currentWeatherPath}`;\r\n\t\tconst config: AxiosRequestConfig = { params: { ...this._getDefaultParams(), id: cityId } }\r\n\t\treturn axios.get<ICurrentWeather>(url, config)\r\n\t\t\t.then(response => response.data);\r\n\t}\r\n\r\n\tgetFiveDaysThreeHoursWeather(cityId: number) {\r\n\t\tconst url = `${apiConfig.mainApiUrl}${apiConfig.fiveDaysThreeHoursWeatherPath}`;\r\n\t\tconst config: AxiosRequestConfig = { params: { ...this._getDefaultParams(), id: cityId } }\r\n\t\treturn axios.get<IFiveDaysThreeHoursWeather>(url, config)\r\n\t\t\t.then(response => response.data);\r\n\t}\r\n}\r\n\r\n\r\nconst weatherApi = new WeatherApi();\r\nexport default weatherApi;","import * as React from 'react';\r\nimport apiConfig from '../api/apiConfig';\r\n\r\ninterface IWeatherIconProps {\r\n\ticon: string\r\n}\r\n\r\nexport default (props: IWeatherIconProps) => {\r\n\tconst imgUrl = `${apiConfig.imgUrl}/${props.icon}.png`;\r\n\treturn <img src={imgUrl} />;\r\n}","import React from 'react';\r\nimport { getSettingsOrDefault } from '../common/localStorageService';\r\nimport { ISettings } from '../models/ISettings';\r\n\r\ninterface IFormattedTemperature {\r\n\ttemp: number;\r\n}\r\n\r\nconst FormattedTemperature = (props: IFormattedTemperature) => {\r\n\tconst format: ISettings = getSettingsOrDefault();\r\n\tconst tempFormat = format.tempMetric.toUpperCase();\r\n\treturn <span>{props.temp}°{tempFormat}</span>;\r\n};\r\n\r\nexport default FormattedTemperature;","import * as React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\ninterface IFormattedMainWeatherProps {\r\n\tweatherId: number\r\n}\r\n\r\nexport const FormattedMainWeather = (props: IFormattedMainWeatherProps) => {\r\n\tconst { weatherId } = props;\r\n\tswitch (true) {\r\n\t\tcase (weatherId >= 200 && weatherId <= 232):\r\n\t\t\treturn <FormattedMessage id=\"weather.thunderstorm\" defaultMessage=\"Thunderstorm\" />\r\n\t\tcase (weatherId >= 300 && weatherId <= 321):\r\n\t\t\treturn <FormattedMessage id=\"weather.Drizzle\" defaultMessage=\"Drizzle\" />\r\n\t\tcase (weatherId >= 500 && weatherId <= 531):\r\n\t\t\treturn <FormattedMessage id=\"weather.rain\" defaultMessage=\"Rain\" />\r\n\t\tcase (weatherId >= 600 && weatherId <= 622):\r\n\t\t\treturn <FormattedMessage id=\"weather.snow\" defaultMessage=\"Snow\" />\r\n\t\tcase (weatherId === 701):\r\n\t\t\treturn <FormattedMessage id=\"weather.mist\" defaultMessage=\"Mist\" />\r\n\t\tcase (weatherId === 711):\r\n\t\t\treturn <FormattedMessage id=\"weather.smoke\" defaultMessage=\"Smoke\" />\r\n\t\tcase (weatherId === 721):\r\n\t\t\treturn <FormattedMessage id=\"weather.haze\" defaultMessage=\"Haze\" />\r\n\t\tcase (weatherId === 731 || weatherId === 761):\r\n\t\t\treturn <FormattedMessage id=\"weather.dust\" defaultMessage=\"Dust\" />\r\n\t\tcase (weatherId === 741):\r\n\t\t\treturn <FormattedMessage id=\"weather.fog\" defaultMessage=\"Fog\" />\r\n\t\tcase (weatherId === 751):\r\n\t\t\treturn <FormattedMessage id=\"weather.sand\" defaultMessage=\"Sand\" />\r\n\t\tcase (weatherId === 762):\r\n\t\t\treturn <FormattedMessage id=\"weather.ash\" defaultMessage=\"Ash\" />\r\n\t\tcase (weatherId === 771):\r\n\t\t\treturn <FormattedMessage id=\"weather.squall\" defaultMessage=\"Squall\" />\r\n\t\tcase (weatherId === 781):\r\n\t\t\treturn <FormattedMessage id=\"weather.tornado\" defaultMessage=\"Tornado\" />\r\n\t\tcase (weatherId === 800):\r\n\t\t\treturn <FormattedMessage id=\"weather.clear\" defaultMessage=\"Clear\" />\r\n\t\tcase (weatherId >= 801 && weatherId <= 804):\r\n\t\t\treturn <FormattedMessage id=\"weather.clouds\" defaultMessage=\"Clouds\" />\r\n\t}\r\n\r\n\treturn <React.Fragment/>\r\n}","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { ICurrentWeather } from '../models/ICurrentWeather';\r\nimport WeatherIcon from './WeatherIcon';\r\nimport './ListWeatherItem.css'\r\nimport { Flag } from 'semantic-ui-react';\r\nimport FormattedTemperature from './FormattedTemperature';\r\nimport { FormattedMainWeather } from './FormattedMainWeather';\r\n\r\ninterface IListWeatherItemProps {\r\n\tcurrentWeather: ICurrentWeather,\r\n\ticonButton: React.ReactNode,\r\n}\r\n\r\nexport const ListWeatherItem = (props: IListWeatherItemProps) => {\r\n\tconst { weather, main, wind, clouds, coord, id, sys, name } = props.currentWeather;\r\n\tconst icon = weather && weather.length && weather[0].icon;\r\n\tconst weatherId = weather[0].id;\r\n\r\n\tconst iconColStyle = { display: 'flex', justifyContent: 'center', height: '90px', alignItems: 'center' };\r\n\treturn <div className=\"row list-weather-item\">\r\n\t\t<div className=\"col-sm-2\" >\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t{icon && <div className=\"col-xs-12\" style={{ display: 'flex', justifyContent: 'center' }}><span><WeatherIcon icon={icon} /></span></div>}\r\n\t\t\t\t<div className=\"col-xs-12\" style={{ display: 'flex', justifyContent: 'center' }}><span><b><FormattedMainWeather weatherId={weatherId}/></b></span></div>\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t\t<div className=\"col-sm-6\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-xs-12\">\r\n\t\t\t\t\t<span><Link to={`/cities/${id}`}>{name}, {sys.country} </Link></span>\r\n\t\t\t\t\t<span>{sys.country && <Flag name={sys.country.toLocaleLowerCase() as any} />}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-xs-12\">\r\n\t\t\t\t\t<span style={{ fontWeight: 'bold' }}>{weather[0].description}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-xs-12\">\r\n\t\t\t\t\t<span><div className=\"ui horizontal label\"><FormattedTemperature temp={main.temp}/></div></span>\r\n\t\t\t\t\t<span><FormattedMessage id='common.temperature_from' defaultMessage='Temperature from' /> </span>\r\n\t\t\t\t\t<span><b><FormattedTemperature temp={main.temp_min}/></b></span>\r\n\t\t\t\t\t<span><FormattedMessage id='common.to' defaultMessage='to' /></span>\r\n\t\t\t\t\t<span><b><FormattedTemperature temp={main.temp_max}/></b></span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-xs-12\">\r\n\t\t\t\t\t<span><FormattedMessage id='geo.coords' defaultMessage='Geo coords' /></span>\r\n\t\t\t\t\t<span><a target=\"blank\" href={`https://www.google.com/maps/search/?api=1&query=${coord.lat},${coord.lon}`}>[{coord.lat}, {coord.lon}]</a></span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"col-sm-3\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-xs-12\">\r\n\t\t\t\t\t<span><FormattedMessage id='weather.wind' defaultMessage='Wind' />: </span>\r\n\t\t\t\t\t<span><b>{wind.speed}</b> <FormattedMessage id=\"weather.wind_mps\" defaultMessage=\"m/s\"/></span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-xs-12\">\r\n\t\t\t\t\t<span><FormattedMessage id='weather.cloudiness' defaultMessage='Cloudiness' />: </span>\r\n\t\t\t\t\t<span><b>{clouds.all}</b> %</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-xs-12\">\r\n\t\t\t\t\t<span><FormattedMessage id='weather.humidity' defaultMessage='Humidity' />: </span>\r\n\t\t\t\t\t<span><b>{main.humidity}</b> %</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-xs-12\">\r\n\t\t\t\t\t<span><FormattedMessage id='weather.pressure' defaultMessage='Pressure' />: </span>\r\n\t\t\t\t\t<span><b>{main.pressure}</b> <FormattedMessage id=\"weather.pressure_hpa\" defaultMessage=\"hpa\"/></span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"col-sm-1\" style={iconColStyle}>\r\n\t\t\t{props.iconButton}\r\n\t\t</div>\r\n\t</div>;\r\n}\r\n\r\n\r\n","import * as React from 'react';\r\nimport { Button, Icon } from 'semantic-ui-react';\r\n\r\ninterface IHeartToggleIconProps {\r\n\tactive: boolean,\r\n\tonClick: () => void,\r\n}\r\n\r\nexport const HeartToggleIcon = (props: IHeartToggleIconProps) => {\r\n\r\n\tconst { onClick, active } = props;\r\n\tconst iconName = active ? 'heart' : 'heart outline';\r\n\r\n\treturn <Button\r\n\t\t\tstyle={{ padding: 0, backgroundColor: 'transparent' }}\r\n\t\t\ticon\r\n\t\t\tonClick={onClick}>\r\n\t\t\t<Icon name={iconName} size=\"large\" color=\"red\" />\r\n\t\t</Button>\r\n}","import * as React from 'react';\r\nimport { CitySearchBar } from './components/CitySearchBar';\r\nimport './index.css'\r\nimport weatherApi from '../../api/WeatherApi';\r\nimport { ICurrentWeather } from '../../models/ICurrentWeather';\r\nimport { Message, Icon } from 'semantic-ui-react';\r\nimport { ListWeatherItem } from '../../components/ListWeatherItem';\r\nimport { removeFromFavourites, addToFavourites, checkIfInFavourites, getFavourites } from '../../common/localStorageService';\r\nimport { HeartToggleIcon } from '../../components/HeartToggleIcon';\r\n\r\ninterface IHomeSceneState {\r\n\tcityWeatherItems: ICurrentWeather[],\r\n\tfavourites: number[],\r\n\tcityNotFound: boolean;\r\n}\r\n\r\ninterface IHomeSceneProps {\r\n\r\n}\r\n\r\nclass HomeScene extends React.Component<IHomeSceneProps, IHomeSceneState> {\r\n\r\n\tconstructor(props: Readonly<IHomeSceneProps>) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcityWeatherItems: [],\r\n\t\t\tfavourites: getFavourites(),\r\n\t\t\tcityNotFound: false,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tlet promises = [];\r\n\t\tpromises.push(weatherApi.getCurrentWeatherByName('Sofia'));\r\n\t\tpromises.push(weatherApi.getCurrentWeatherByName('London'));\r\n\t\tpromises.push(weatherApi.getCurrentWeatherByName('Washington'));\r\n\r\n\t\tPromise.all(promises)\r\n\t\t\t.then(weatherItems => {\r\n\t\t\t\tthis.setState({ cityWeatherItems: weatherItems });\r\n\t\t\t});\r\n\t}\r\n\r\n\tonSearchValueChange: any = (city: string, code: string) => {\r\n\t\tconst input = code ? city + \",\" + code : city;\r\n\t\tweatherApi.getCurrentWeatherByName(input)\r\n\t\t\t.then(res => {\r\n\t\t\t\tthis.setState({ cityWeatherItems: [res], cityNotFound: false });\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tthis.setState({ cityWeatherItems: [], cityNotFound: true })\r\n\t\t\t});\r\n\t}\r\n\r\n\tonToggleIconClick = (cityId: number) => {\r\n\t\tcheckIfInFavourites(cityId) ? removeFromFavourites(cityId) : addToFavourites(cityId);\r\n\t\tthis.setState({ favourites: getFavourites() });\r\n\t}\r\n\r\n\tonGetLocation = (position: Position) => {\r\n\t\tweatherApi.getCurrentWeatherByLocation(position.coords.longitude, position.coords.latitude)\r\n\t\t\t.then(res => {\r\n\t\t\t\tthis.setState({ cityWeatherItems: [res], cityNotFound: false });\r\n\t\t\t}).catch(error => {\r\n\t\t\t\tthis.setState({ cityWeatherItems: [], cityNotFound: true })\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { cityNotFound, cityWeatherItems } = this.state;\r\n\t\treturn <React.Fragment>\r\n\t\t\t<div className=\"search-container\">\r\n\t\t\t\t<CitySearchBar onSelect={this.onSearchValueChange} onGetLocation={this.onGetLocation} ></CitySearchBar>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"search-result-container\">\r\n\t\t\t\t{cityNotFound && <Message color='teal'>No <b>WeatherInfo</b> for selected city :(</Message>}\r\n\t\t\t\t{cityWeatherItems.map(i =>\r\n\t\t\t\t\t<ListWeatherItem\r\n\t\t\t\t\t\ticonButton={<HeartToggleIcon\r\n\t\t\t\t\t\t\tonClick={() => this.onToggleIconClick(i.id)}\r\n\t\t\t\t\t\t\tactive={checkIfInFavourites(i.id)} />}\r\n\t\t\t\t\t\tkey={i.id}\r\n\t\t\t\t\t\tcurrentWeather={i} />)}\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t}\r\n}\r\n\r\nexport default HomeScene;","import { getSettingsOrDefault } from \"../common/localStorageService\";\r\nimport { ISettings } from \"../models/ISettings\";\r\n\r\nexport const getWindDirection = (degrees: number) => {\r\n\tconst settings: ISettings = getSettingsOrDefault();\r\n\tconst { language } = settings;\r\n\tconst val = Math.floor((degrees / 22.5) + .5);\r\n\tconst directionsEn = [\"North\", \"NNE\", \"Northeast\", \"ENE\", \"East\", \"ESE\", \"Southeast\", \"SSE\", \"South\", \"SSW\", \"Southwest\", \"WSW\", \"West\", \"WNW\", \"Northwest\", \"NNW\"];\r\n\tconst directionsBg = [\"Север\", \"ССИ\", \"Северозапад\", \"ИСИ\", \"Изток\", \"ИЮИ\", \"Югоизток\", \"ЮЮИ\", \"Юг\", \"ЮЮЗ\", \"Югозапад\", \"ЗЮЗ\", \"Запад\", \"ЗСЗ\", \"Северозапад\", \"ССЗ\"];\r\n\r\n\tif (language === 'bg') {\r\n\t\treturn directionsBg[(val % 16)];\r\n\t}\r\n\t\r\n\treturn directionsEn[(val % 16)];\r\n}","import * as React from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport { ICurrentWeather } from '../../../models/ICurrentWeather';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { getWindDirection } from '../../../utils/getWindDirection';\r\nimport apiConfig from '../../../api/apiConfig';\r\nimport WeatherIcon from '../../../components/WeatherIcon';\r\nimport { FormattedMainWeather } from '../../../components/FormattedMainWeather';\r\nimport FormattedTemperature from '../../../components/FormattedTemperature';\r\n\r\ninterface IWeatherSummaryTableProps {\r\n\tcurrentWeather: ICurrentWeather\r\n}\r\n\r\nexport const WeatherSummaryTable = (props: IWeatherSummaryTableProps) => {\r\n\tconst { main: mainWeather, rain, snow, weather: shortWeather, coord: { lon, lat }, wind, clouds } = props.currentWeather;\r\n\tconst { icon, description } = shortWeather[0];\r\n\tconst weatherId = shortWeather[0].id;\r\n\r\n\tconst style: React.CSSProperties = {\r\n\t\tmarginTop: '-15px',\r\n\t\tpaddingLeft: '25px',\r\n\t\tfontSize: '16px',\r\n\t}\r\n\r\n\treturn <React.Fragment>\r\n\t\t<div className=\"row\" >\r\n\t\t\t<div className=\"col-xs-12\">\r\n\t\t\t\t<WeatherIcon icon={icon} />\r\n\t\t\t\t<span style={{ fontSize: '28px' }}><FormattedTemperature temp={mainWeather.temp} /></span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-xs-12\" style={style}>\r\n\t\t\t\t<b><FormattedMainWeather weatherId={weatherId}/></b>\r\n\t\t\t\t<span>{' '}{description}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-xs-12\">\r\n\t\t\t\t<Table celled striped unstackable color=\"teal\">\r\n\t\t\t\t\t<Table.Body>\r\n\t\t\t\t\t\t<Table.Row>\r\n\t\t\t\t\t\t\t<Table.Cell><FormattedMessage id='weather.wind' defaultMessage='Wind' /></Table.Cell>\r\n\t\t\t\t\t\t\t<Table.Cell>{wind.speed} <FormattedMessage id=\"weather.wind_mps\" defaultMessage=\"m/s\"/>{wind.deg && <span>, {getWindDirection(wind.deg)} ({wind.deg})</span>}</Table.Cell>\r\n\t\t\t\t\t\t</Table.Row>\r\n\t\t\t\t\t\t<Table.Row>\r\n\t\t\t\t\t\t\t<Table.Cell><FormattedMessage id='weather.cloudiness' defaultMessage='Cloudiness' /></Table.Cell>\r\n\t\t\t\t\t\t\t<Table.Cell>{clouds.all} %</Table.Cell>\r\n\t\t\t\t\t\t</Table.Row>\r\n\t\t\t\t\t\t<Table.Row>\r\n\t\t\t\t\t\t\t<Table.Cell><FormattedMessage id='weather.pressure' defaultMessage='Pressure' /></Table.Cell>\r\n\t\t\t\t\t\t\t<Table.Cell>{mainWeather.pressure} <FormattedMessage id=\"weather.pressure_hpa\" defaultMessage=\"hpa\"/></Table.Cell>\r\n\t\t\t\t\t\t</Table.Row>\r\n\t\t\t\t\t\t<Table.Row>\r\n\t\t\t\t\t\t\t<Table.Cell><FormattedMessage id='weather.humidity' defaultMessage='Humidity' /></Table.Cell>\r\n\t\t\t\t\t\t\t<Table.Cell>{mainWeather.humidity} %</Table.Cell>\r\n\t\t\t\t\t\t</Table.Row>\r\n\t\t\t\t\t\t<Table.Row>\r\n\t\t\t\t\t\t\t<Table.Cell><FormattedMessage id='weather.rain' defaultMessage='Rain' /></Table.Cell>\r\n\t\t\t\t\t\t\t<Table.Cell>{rain && (rain['3h'] || rain['1h']) || 0} <FormattedMessage id=\"weather.rain_mm\" defaultMessage=\"mm\"/></Table.Cell>\r\n\t\t\t\t\t\t</Table.Row>\r\n\t\t\t\t\t\t<Table.Row>\r\n\t\t\t\t\t\t\t<Table.Cell><FormattedMessage id='weather.snow' defaultMessage='Snow' /></Table.Cell>\r\n\t\t\t\t\t\t\t<Table.Cell>{snow && (snow['3h'] || snow['1h']) || 0} <FormattedMessage id=\"weather.rain_mm\" defaultMessage=\"mm\"/></Table.Cell>\r\n\t\t\t\t\t\t</Table.Row>\r\n\t\t\t\t\t\t<Table.Row>\r\n\t\t\t\t\t\t\t<Table.Cell><FormattedMessage id='geo.coords' defaultMessage='Geo coords' /></Table.Cell>\r\n\t\t\t\t\t\t\t<Table.Cell>\r\n\t\t\t\t\t\t\t\t<span><a target=\"blank\" href={`https://www.google.com/maps/search/?api=1&query=${lat},${lon}`}>[{lat}, {lon}]</a></span>\r\n\t\t\t\t\t\t\t</Table.Cell>\r\n\t\t\t\t\t\t</Table.Row>\r\n\t\t\t\t\t</Table.Body>\r\n\t\t\t\t</Table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</React.Fragment>\r\n}\r\n","import * as React from 'react';\r\nimport apiConfig from '../../../api/apiConfig';\r\nimport './WeatherSwiperItem.css'\r\nimport { IWeatherShortInfo } from '../../../models/IWeatherShortInfo';\r\nimport { FormattedDate, FormattedMessage } from 'react-intl';\r\nimport { Label } from 'semantic-ui-react';\r\nimport WeatherIcon from '../../../components/WeatherIcon';\r\nimport FormattedTemperature from '../../../components/FormattedTemperature';\r\n\r\ninterface IWeatherSwiperItemProps {\r\n\tweather: IWeatherShortInfo\r\n}\r\n\r\nexport const WeatherSwiperItem = (props: IWeatherSwiperItemProps) => {\r\n\tconst { clouds, windSpeed, humidity, temp, temp_max, temp_min, icon, description, date, pressure } = props.weather;\r\n\t\r\n\treturn <div className=\"swiper-item\">\r\n\t\t<div><WeatherIcon icon={icon}/></div>\r\n\t\t<div><FormattedDate value={new Date(date * 1000)} weekday=\"long\" /></div>\r\n\t\t<div><FormattedDate value={new Date(date * 1000)} day='2-digit' month='long' /></div>\r\n\t\t<br />\r\n\t\t<Label color='blue' size='large'><FormattedMessage defaultMessage=\"Min:\" id=\"common.min\" />{' '}<FormattedTemperature temp={temp_min}/></Label>\r\n\t\t<Label color='red' size='large'><FormattedMessage defaultMessage=\"Max:\" id=\"common.max\" />{' '}<FormattedTemperature temp={temp_max}/></Label>\r\n\t\t<div><FormattedMessage id=\"common.avg_temp\" defaultMessage=\"Average temperature:\"/>{' '}<b><FormattedTemperature temp={temp}/></b></div>\r\n\t\t<div>{description}</div>\r\n\t\t<br />\r\n\t\t<div><FormattedMessage id=\"weather.wind\" defaultMessage=\"Wind\"/>: <b>{windSpeed}</b> <FormattedMessage id=\"weather.wind_mps\" defaultMessage=\"m/s\"/></div>\r\n\t\t<div><FormattedMessage id=\"weather.cloudiness\" defaultMessage=\"Cloudiness\"/>: <b>{clouds}</b> %</div>\r\n\t\t<div><FormattedMessage id=\"weather.pressure\" defaultMessage=\"Pressure\"/>: <b>{pressure}</b> <FormattedMessage id=\"weather.pressure_hpa\" defaultMessage=\"hpa\"/></div>\r\n\t\t<div><FormattedMessage id=\"weather.humidity\" defaultMessage=\"Humidity\"/>: <b>{humidity}</b> %</div>\r\n\t</div>\r\n}","import * as React from 'react';\r\nimport SwiperSlide from 'react-id-swiper/lib/ReactIdSwiper.full';\r\nimport { WeatherSwiperItem } from './WeatherSwiperItem';\r\nimport { IWeatherShortInfo } from '../../../models/IWeatherShortInfo';\r\n\r\ninterface IWeatherSwiperProps {\r\n\titems: IWeatherShortInfo[];\r\n}\r\n\r\nexport const WeatherSwiper = (props: IWeatherSwiperProps) => {\r\n\tconst { items } = props;\r\n\r\n\tconst params = {\r\n\t\tslidesPerView: 3,\r\n\t\tspaceBetween: 30,\r\n\t\tpagination: {\r\n\t\t\tel: '.swiper-pagination',\r\n\t\t\tclickable: true,\r\n\t\t},\r\n\t\tnavigation: {\r\n\t\t\tnextEl: '.swiper-button-next',\r\n\t\t\tprevEl: '.swiper-button-prev'\r\n\t\t},\r\n\t\tbreakpoints: {\r\n\t\t\t900: {\r\n\t\t\t\tslidesPerView: 2,\r\n\t\t\t\tspaceBetween: 30\r\n\t\t\t},\r\n\t\t\t600: {\r\n\t\t\t\tslidesPerView: 1,\r\n\t\t\t\tspaceBetween: 20\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn <React.Fragment>\r\n\t\t<SwiperSlide {...params} shouldSwiperUpdate rebuildOnUpdate>\r\n\t\t\t{items.map(i => <div key={i.date}><WeatherSwiperItem weather={i}></WeatherSwiperItem></div>)}\r\n\t\t</SwiperSlide>\r\n\t</React.Fragment>\r\n}","import React from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\ninterface IChartNavBarProps {\r\n\tactiveItem: string;\r\n\thandleItemClick: (activeItem: string) => void;\r\n}\r\n\r\nconst ChartNavBar = (props: IChartNavBarProps) => {\r\n\r\n\tconst { activeItem, handleItemClick } = props;\r\n\treturn <React.Fragment>\r\n\t\t<Menu size='huge' pointing secondary>\r\n\t\t\t<Menu.Item name=\"Temperature\" color='teal' active={activeItem === 'Temperature'} onClick={(e: any, data: any) => handleItemClick(data.name)} >\r\n\t\t\t\t<FormattedMessage id=\"weather.temperature\" defaultMessage=\"Temperature\"/>\r\n\t\t\t</Menu.Item>\r\n\t\t\t<Menu.Item name=\"Wind\" color='teal' active={activeItem === 'Wind'} onClick={(e: any, data: any) => handleItemClick(data.name)} >\r\n\t\t\t\t<FormattedMessage id=\"weather.wind\" defaultMessage=\"Wind\" />\r\n\t\t\t</Menu.Item>\r\n\t\t\t<Menu.Item name=\"Pressure\" color='teal' active={activeItem === 'Pressure'} onClick={(e: any, data: any) => handleItemClick(data.name)} >\r\n\t\t\t\t<FormattedMessage id=\"weather.pressure\" defaultMessage=\"Pressure\"/>\r\n\t\t\t</Menu.Item>\r\n\t\t\t<Menu.Item name=\"Precipitation\" color='teal' active={activeItem === 'Precipitation'} onClick={(e: any, data: any) => handleItemClick(data.name)} >\r\n\t\t\t\t<FormattedMessage id=\"weather.precipitation\" defaultMessage=\"Precipitation\"/>\r\n\t\t\t</Menu.Item>\r\n\t\t</Menu>\r\n\t</React.Fragment>\r\n}\r\n\r\nexport default ChartNavBar;","import { CartesianGrid, XAxis, YAxis, Tooltip, Legend, Line, Area, ComposedChart, ResponsiveContainer } from \"recharts\";\r\nimport * as React from 'react';\r\nimport { ITempDataItem } from \"../../../models/ITempDataItem\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport FormattedTemperature from \"../../../components/FormattedTemperature\";\r\nimport { getSettingsOrDefault } from \"../../../common/localStorageService\";\r\nimport { ISettings } from \"../../../models/ISettings\";\r\n\r\ninterface ITempLineChartProps {\r\n\tdata: ITempDataItem[]\r\n}\r\n\r\nconst CustomTooltipp = (props: any) => {\r\n\tif (props && props.active) {\r\n\t\tconst { payload } = props.payload[0];\r\n\t\treturn <div style={{ backgroundColor: 'white', padding: '5px', border: 'rgba(0, 0, 0, 0.5) solid 1px' }}>\r\n\t\t\t<div>\r\n\t\t\t\t<FormattedMessage id=\"common.time\" defaultMessage=\"Time\" />: {payload.name}\r\n\t\t\t</div>\r\n\t\t\t<div style={{ color: '#dd9d1f' }}>\r\n\t\t\t\t<FormattedMessage id=\"common.average\" defaultMessage=\"Average\" />: <FormattedTemperature temp={payload.average} />\r\n\t\t\t</div>\r\n\t\t\t<div style={{ color: '#0857e0' }}>\r\n\t\t\t\t<FormattedMessage id=\"common.min\" defaultMessage=\"Min\" />: <FormattedTemperature temp={payload.min} />\r\n\t\t\t</div>\r\n\t\t\t<div style={{ color: '#f21607' }}>\r\n\t\t\t\t<FormattedMessage id=\"common.max\" defaultMessage=\"Max\" />: <FormattedTemperature temp={payload.max} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nexport const TempComposedChart = (props: ITempLineChartProps) => {\r\n\tconst unit = '°' + getSettingsOrDefault().tempMetric.toUpperCase();\r\n\r\n\treturn <div style={{ width: \"100%\", height: 320 }}>\r\n\t\t<ResponsiveContainer>\r\n\t\t\t<ComposedChart width={850} height={320} data={props.data}\r\n\t\t\t\tmargin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t<XAxis dataKey=\"name\" />\r\n\t\t\t\t<YAxis />\r\n\t\t\t\t<Tooltip content={<CustomTooltipp />} />\r\n\t\t\t\t<Legend payload={[{\r\n\t\t\t\t\tvalue: <FormattedMessage id=\"common.average\" defaultMessage=\"Average\" />,\r\n\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\tid: 'avg',\r\n\t\t\t\t\tcolor: '#ffbc38'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: <FormattedMessage id=\"common.min\" defaultMessage=\"Min\" />,\r\n\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\tid: 'min',\r\n\t\t\t\t\tcolor: '#f21607'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: <FormattedMessage id=\"common.max\" defaultMessage=\"Max\" />,\r\n\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\tid: 'max',\r\n\t\t\t\t\tcolor: '#0857e0'\r\n\t\t\t\t}]} />\r\n\r\n\t\t\t\t<defs>\r\n\t\t\t\t\t<linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n\t\t\t\t\t\t<stop offset=\"5%\" stopColor=\"#ffbc38\" stopOpacity={0.8} />\r\n\t\t\t\t\t\t<stop offset=\"95%\" stopColor=\"#ffbc38\" stopOpacity={0} />\r\n\t\t\t\t\t</linearGradient>\r\n\t\t\t\t</defs>\r\n\t\t\t\t<Area type=\"monotone\" name=\"Average\" dataKey=\"average\" stroke=\"#ffbc38\" fillOpacity={1} fill=\"url(#colorUv)\" unit=\"°С\" />\r\n\r\n\t\t\t\t<Line type=\"monotone\" dataKey=\"max\" stroke=\"#f21607\" unit={unit} />\r\n\t\t\t\t<Line type=\"monotone\" dataKey=\"min\" stroke=\"#0857e0\" unit={unit} />\r\n\t\t\t</ComposedChart>\r\n\t\t</ResponsiveContainer>\r\n\t</div>\r\n}","import { LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Line, ResponsiveContainer } from \"recharts\";\r\nimport * as React from 'react';\r\nimport { IWindDataItem } from \"../../../models/IWindDataItem\";\r\nimport { getWindDirection } from \"../../../utils/getWindDirection\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\ninterface IWindLineChart {\r\n\tdata: IWindDataItem[]\r\n}\r\n\r\nconst CustomTooltip = (props: any) => {\r\n\tif (props.active) {\r\n\t\tconst { payload } = props.payload[0];\r\n\t\treturn <div style={{ backgroundColor: 'white', padding: '5px', border: 'rgba(0, 0, 0, 0.5) solid 1px' }}>\r\n\t\t\t<div><FormattedMessage id=\"common.time\" defaultMessage=\"Time\" />: {payload.name}</div>\r\n\t\t\t<div style={{ color: '#0857e0' }}>\r\n\t\t\t\t<FormattedMessage id=\"weather.wind_speed\" defaultMessage=\"Speed\" />: {payload.speed} <FormattedMessage id=\"weather.wind_mps\" defaultMessage=\"m/s\" />\r\n\t\t\t</div>\r\n\t\t\t<div style={{ color: '#f21607' }}>\r\n\t\t\t\t<FormattedMessage id=\"weather.wind_direction\" defaultMessage=\"Direction\" />: {getWindDirection(payload.deg)} ({payload.deg})\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nexport const WindLineChart = (props: IWindLineChart) => {\r\n\treturn <div style={{ width: \"100%\", height: 320 }}>\r\n\t\t<ResponsiveContainer>\r\n\t\t\t<LineChart width={850} height={320} data={props.data}\r\n\t\t\t\tmargin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t<XAxis dataKey=\"name\" />\r\n\t\t\t\t<YAxis />\r\n\t\t\t\t<Tooltip\r\n\t\t\t\t\tcontent={<CustomTooltip />}\r\n\t\t\t\t/>\r\n\t\t\t\t<Legend payload={[{\r\n\t\t\t\t\tvalue: <FormattedMessage id=\"weather.wind_speed\" defaultMessage=\"Speed\" />,\r\n\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\tid: 'speed',\r\n\t\t\t\t\tcolor: '#0857e0'\r\n\t\t\t\t}]}/>\r\n\r\n\t\t\t\t<Line type=\"monotone\" name=\"Speed\" dataKey=\"speed\" stroke=\"#0857e0\" unit=\"m/s\" />\r\n\t\t\t</LineChart>\r\n\t\t</ResponsiveContainer>\r\n\t</div>\r\n}","import { CartesianGrid, XAxis, YAxis, Tooltip, Legend, Line, ComposedChart, Bar, ResponsiveContainer } from \"recharts\";\r\nimport * as React from 'react';\r\nimport { IPressureDataItem } from \"../../../models/IPressureDataItem\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\ninterface IPressureComposedChartProps {\r\n\tdata: IPressureDataItem[]\r\n}\r\n\r\nconst CustomTooltip = (props: any) => {\r\n\tif (props.active) {\r\n\t\tconst { payload } = props.payload[0];\r\n\t\treturn <div style={{ backgroundColor: 'white', padding: '5px', border: 'rgba(0, 0, 0, 0.5) solid 1px' }}>\r\n\t\t\t<div><FormattedMessage id=\"common.time\" defaultMessage=\"Time\" />: {payload.name}</div>\r\n\t\t\t<div style={{ color: '#268e61' }}>\r\n\t\t\t\t<FormattedMessage id=\"weather.pressure\" defaultMessage=\"Pressure\" />: {payload.pressure} <FormattedMessage id=\"weather.pressure_hpa\" defaultMessage=\"hpa\" />\r\n\t\t\t</div>\r\n\t\t\t<div style={{ color: '#f21607' }}>\r\n\t\t\t\t<FormattedMessage id=\"common.ground_level\" defaultMessage=\"Ground level\" />: {payload.grndLevel} <FormattedMessage id=\"weather.pressure_hpa\" defaultMessage=\"hpa\" />\r\n\t\t\t</div>\r\n\t\t\t<div style={{ color: '#0857e0' }}>\r\n\t\t\t\t<FormattedMessage id=\"common.sea_level\" defaultMessage=\"Sea level\" />: {payload.seaLevel} <FormattedMessage id=\"weather.pressure_hpa\" defaultMessage=\"hpa\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nexport const PressureComposedChart = (props: IPressureComposedChartProps) => {\r\n\treturn <div style={{ width: \"100%\", height: 320 }}>\r\n\t\t<ResponsiveContainer>\r\n\t\t\t<ComposedChart width={850} height={320} data={props.data}\r\n\t\t\t\tmargin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t<XAxis dataKey=\"name\" />\r\n\t\t\t\t<YAxis domain={[1000, 1050]} />\r\n\t\t\t\t<Tooltip content={<CustomTooltip />} />\r\n\t\t\t\t<Legend payload={[{\r\n\t\t\t\t\tvalue: <FormattedMessage id=\"weather.pressure\" defaultMessage=\"Pressure\" />,\r\n\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\tid: 'pressure',\r\n\t\t\t\t\tcolor: 'rgba(84, 183, 140, 0.5)'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: <FormattedMessage id=\"common.ground_level\" defaultMessage=\"Ground level\" />,\r\n\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\tid: 'ground_level',\r\n\t\t\t\t\tcolor: '#f21607'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: <FormattedMessage id=\"common.sea_level\" defaultMessage=\"Sea level\" />,\r\n\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\tid: 'sea_level',\r\n\t\t\t\t\tcolor: '#0857e0'\r\n\t\t\t\t}]} />\r\n\t\t\t\t<Bar dataKey=\"pressure\" fill=\"rgba(84, 183, 140, 0.5)\" unit=\"hpa\" />\r\n\t\t\t\t<Line type=\"monotone\" dataKey=\"seaLevel\" stroke=\"#0857e0\" unit=\"hpa\" />\r\n\t\t\t\t<Line type=\"monotone\" dataKey=\"grndLevel\" stroke=\"#f21607\" unit=\"hpa\" />\r\n\t\t\t</ComposedChart>\r\n\t\t</ResponsiveContainer>\r\n\t</div>\r\n}","import { IPrecipitationDataItem } from \"../../../models/IPrecipitationDataItem\";\r\nimport { AreaChart, XAxis, YAxis, CartesianGrid, Tooltip, Area, ResponsiveContainer, Legend } from \"recharts\";\r\nimport * as React from 'react';\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\ninterface IPrecipitationAriaChartProps {\r\n\tdata: IPrecipitationDataItem[]\r\n}\r\n\r\nconst CustomTooltip = (props: any) => {\r\n\tif (props.active) {\r\n\t\tconst { payload } = props.payload[0];\r\n\t\treturn <div style={{ backgroundColor: 'white', padding: '5px', border: 'rgba(0, 0, 0, 0.5) solid 1px' }}>\r\n\t\t\t<div><FormattedMessage id=\"common.time\" defaultMessage=\"Time\" />: {payload.name}</div>\r\n\t\t\t<div style={{ color: '#082d68' }}>\r\n\t\t\t\t<FormattedMessage id=\"weather.rain\" defaultMessage=\"Rain\" />: {payload.rain} <FormattedMessage id=\"weather.pressure_hpa\" defaultMessage=\"hpa\" />\r\n\t\t\t</div>\r\n\t\t\t<div style={{ color: '#066017' }}>\r\n\t\t\t\t<FormattedMessage id=\"weather.snow\" defaultMessage=\"Snow\" />: {payload.snow} <FormattedMessage id=\"weather.pressure_hpa\" defaultMessage=\"hpa\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nexport const PrecipitationAriaChart = (props: IPrecipitationAriaChartProps) => {\r\n\treturn props.data.length > 0 &&\r\n\t\t<div style={{ width: \"100%\", height: 320 }}>\r\n\t\t\t<ResponsiveContainer>\r\n\t\t\t\t<AreaChart width={850} height={320} data={props.data}\r\n\t\t\t\t\tmargin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n\t\t\t\t\t<defs>\r\n\t\t\t\t\t\t<linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n\t\t\t\t\t\t\t<stop offset=\"5%\" stopColor=\"#082d68\" stopOpacity={0.8} />\r\n\t\t\t\t\t\t\t<stop offset=\"95%\" stopColor=\"#082d68\" stopOpacity={0} />\r\n\t\t\t\t\t\t</linearGradient>\r\n\t\t\t\t\t\t<linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n\t\t\t\t\t\t\t<stop offset=\"5%\" stopColor=\"#066017\" stopOpacity={0.8} />\r\n\t\t\t\t\t\t\t<stop offset=\"95%\" stopColor=\"#066017\" stopOpacity={0} />\r\n\t\t\t\t\t\t</linearGradient>\r\n\t\t\t\t\t</defs>\r\n\t\t\t\t\t<XAxis dataKey=\"name\" />\r\n\t\t\t\t\t<YAxis />\r\n\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t<Tooltip content={<CustomTooltip />} />\r\n\t\t\t\t\t<Legend payload={[{\r\n\t\t\t\t\t\tvalue: <FormattedMessage id=\"weather.rain\" defaultMessage=\"Rain\" />,\r\n\t\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\t\tid: 'rain',\r\n\t\t\t\t\t\tcolor: '#082d68'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalue: <FormattedMessage id=\"weather.snow\" defaultMessage=\"Snow\" />,\r\n\t\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\t\tid: 'snow',\r\n\t\t\t\t\t\tcolor: '#066017'\r\n\t\t\t\t\t}]} />\r\n\t\t\t\t\t<Area type=\"monotone\" dataKey=\"rain\" stroke=\"#082d68\" fillOpacity={1} fill=\"url(#colorUv)\" unit=\"mm\" />\r\n\t\t\t\t\t<Area type=\"monotone\" dataKey=\"snow\" stroke=\"#066017\" fillOpacity={1} fill=\"url(#colorPv)\" unit=\"mm\" />\r\n\t\t\t\t</AreaChart>\r\n\t\t\t</ResponsiveContainer>\r\n\t\t</div> ||\r\n\t\t<FormattedMessage id=\"common.missing-data\" defaultMessage=\"There is no available data.\"></FormattedMessage>\r\n}","import * as React from 'react';\r\nimport ChartsNavBar from './ChartsNavBar';\r\nimport { TempComposedChart } from './TempComposedChart';\r\nimport { WindLineChart } from './WindLineChart';\r\nimport { PressureComposedChart } from './PressureComposedChart';\r\nimport { PrecipitationAriaChart } from './PrecipitationAriaChart';\r\nimport { ICurrentWeather } from '../../../models/ICurrentWeather';\r\nimport { IFiveDaysThreeHoursWeather } from '../../../models/IFIveDaysThreeHoursWeather';\r\nimport { ITempDataItem } from '../../../models/ITempDataItem';\r\nimport { IPressureDataItem } from '../../../models/IPressureDataItem';\r\nimport { IPrecipitationDataItem } from '../../../models/IPrecipitationDataItem';\r\nimport { IWindDataItem } from '../../../models/IWindDataItem';\r\nimport { checkIfInFavourites, removeFromFavourites, addToFavourites } from '../../../common/localStorageService';\r\nimport { formatDate } from '../../../common/formatDate';\r\n\r\ninterface IChartsComponentProps {\r\n\tcurrentWeather: ICurrentWeather,\r\n\tfiveDaysThreeHoursWeather: IFiveDaysThreeHoursWeather\r\n}\r\n\r\ninterface IChartsComponentState {\r\n\tactiveChart: string,\r\n\ttempChartData: ITempDataItem[],\r\n\tpressureChartData: IPressureDataItem[],\r\n\tprecipitationChartData: IPrecipitationDataItem[],\r\n\twindChartData: IWindDataItem[],\r\n}\r\n\r\nexport default class ChartsComponent extends React.Component<IChartsComponentProps, IChartsComponentState> {\r\n\r\n\tconstructor(props: Readonly<IChartsComponentProps>) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tactiveChart: 'Temperature',\r\n\t\t\ttempChartData: [],\r\n\t\t\tpressureChartData: [],\r\n\t\t\tprecipitationChartData: [],\r\n\t\t\twindChartData: []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tconst { currentWeather, fiveDaysThreeHoursWeather } = this.props;\r\n\r\n\t\tconst chartsData = fiveDaysThreeHoursWeather.list.slice(0, 8);\r\n\t\tlet tempChartData: ITempDataItem[] = [];\r\n\t\tlet pressureChartData: IPressureDataItem[] = [];\r\n\t\tlet precipitationChartData: IPrecipitationDataItem[] = [];\r\n\t\tlet windChartData: IWindDataItem[] = [];\r\n\r\n\t\tif (!currentWeather.rain) {\r\n\t\t\tconst weatherItem = chartsData.find(i => i.rain !== undefined);\r\n\t\t\tcurrentWeather.rain = weatherItem && weatherItem.rain;\r\n\t\t}\r\n\r\n\t\tif (!currentWeather.snow) {\r\n\t\t\tconst weatherItem = chartsData.find(i => i.snow !== undefined);\r\n\t\t\tcurrentWeather.snow = weatherItem && weatherItem.snow;\r\n\t\t}\r\n\r\n\t\tchartsData.forEach(i => {\r\n\t\t\tconst name = formatDate(new Date(i.dt_txt));\r\n\t\t\ttempChartData.push({\r\n\t\t\t\tname,\r\n\t\t\t\tmin: i.main.temp_min,\r\n\t\t\t\tmax: i.main.temp_max,\r\n\t\t\t\taverage: i.main.temp,\r\n\t\t\t\ticon: i.weather[0].icon\r\n\t\t\t});\r\n\t\t\twindChartData.push({ name, speed: i.wind.speed, deg: i.wind.deg });\r\n\t\t\tpressureChartData.push({\r\n\t\t\t\tname,\r\n\t\t\t\tpressure: i.main.pressure,\r\n\t\t\t\tgrndLevel: i.main.grnd_level,\r\n\t\t\t\tseaLevel: i.main.sea_level\r\n\t\t\t});\r\n\r\n\t\t\tconst { rain, snow } = i;\r\n\t\t\tif (rain || snow) {\r\n\t\t\t\tprecipitationChartData.push({ name, rain: rain && rain[\"3h\"] || 0, snow: snow && snow[\"3h\"] || 0 });\r\n\t\t\t} else if (precipitationChartData.length > 0) {\r\n\t\t\t\tprecipitationChartData.push({ name, rain: 0, snow: 0 });\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.setState({ tempChartData, pressureChartData, windChartData, precipitationChartData })\r\n\t}\r\n\r\n\thandleChartsNavBarClick = (activeChart: string) => {\r\n\t\tthis.setState({ activeChart });\r\n\t}\r\n\r\n\trender = () => {\r\n\t\tconst { activeChart, tempChartData, windChartData, pressureChartData, precipitationChartData } = this.state;\r\n\r\n\t\treturn <React.Fragment>\r\n\t\t\t<ChartsNavBar activeItem={activeChart} handleItemClick={this.handleChartsNavBarClick} />\r\n\t\t\t{activeChart === 'Temperature' && <TempComposedChart data={tempChartData}></TempComposedChart>}\r\n\t\t\t{activeChart === 'Wind' && <WindLineChart data={windChartData}></WindLineChart>}\r\n\t\t\t{activeChart === 'Pressure' && <PressureComposedChart data={pressureChartData}></PressureComposedChart>}\r\n\t\t\t{activeChart === 'Precipitation' && <PrecipitationAriaChart data={precipitationChartData}></PrecipitationAriaChart>}\r\n\t\t</React.Fragment>\r\n\t}\r\n}","import { getSettingsOrDefault } from \"./localStorageService\";\r\n\r\nexport function formatDate(date: Date) {\r\n\tconst settings = getSettingsOrDefault();\r\n\tlet hours: number | string = date.getHours();\r\n\tlet minutes: number | string = date.getMinutes();\r\n\tminutes = minutes < 10 ? '0' + minutes : minutes;\r\n\t\r\n\tif(settings.hoursFormat === '12') {\t\t\r\n\t\tlet ampm = hours >= 12 ? 'p.m.' : 'a.m.';\r\n\t\thours = hours % 12;\r\n\t\thours = hours ? hours : 12;\r\n\t\treturn hours + ':' + minutes + ' ' + ampm;\r\n\t}\r\n\r\n\tif(settings.hoursFormat === '24') {\t\r\n\t\thours = hours < 10 ? '0' + hours : hours;\r\n\t\treturn hours + ':' + minutes;\r\n\t}\r\n\r\n\treturn '';\r\n}","import * as React from 'react';\r\nimport './index.css';\r\nimport { WeatherSummaryTable } from './components/WeatherSummaryTable';\r\nimport { Header } from 'semantic-ui-react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { ICurrentWeather } from '../../models/ICurrentWeather';\r\nimport weatherApi from '../../api/WeatherApi';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { WeatherSwiper } from './components/WeatherSwiper';\r\nimport { IWeatherShortInfo } from '../../models/IWeatherShortInfo';\r\nimport { IFiveDaysThreeHoursWeather } from '../../models/IFIveDaysThreeHoursWeather';\r\nimport ChartsComponent from './components/ChartsComponent';\r\nimport { checkIfInFavourites, removeFromFavourites, addToFavourites } from '../../common/localStorageService';\r\nimport { HeartToggleIcon } from '../../components/HeartToggleIcon';\r\nimport _ from 'lodash';\r\n\r\ninterface ICitySceneState {\r\n\tcurrentWeather?: ICurrentWeather,\r\n\tfiveDaysThreeHoursWeather?: IFiveDaysThreeHoursWeather,\r\n\tswiperItemsData: IWeatherShortInfo[],\r\n\tisInFavourites: boolean\r\n}\r\ninterface ICitySceneProps extends RouteComponentProps {\r\n\r\n}\r\n\r\nclass CityScene extends React.Component<ICitySceneProps, ICitySceneState> {\r\n\tconstructor(props: Readonly<ICitySceneProps>) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tswiperItemsData: [],\r\n\t\t\tisInFavourites: false\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tconst cityId = (this.props.match.params as any).city\r\n\t\tconst currentWeatherPromise = weatherApi.getCurrentWeatherById(cityId);\r\n\t\tconst fiveDaysThreeHoursWeatherPromise = weatherApi.getFiveDaysThreeHoursWeather(cityId);\r\n\r\n\t\tPromise.all([currentWeatherPromise, fiveDaysThreeHoursWeatherPromise])\r\n\t\t\t.then(([currentWeather, fiveDaysThreeHoursWeather]) => {\r\n\r\n\t\t\t\tvar grouped = _.groupBy(fiveDaysThreeHoursWeather.list, e => new Date(e.dt * 1000).getDate());\r\n\t\t\t\tconst swiperItemsData = Object.keys(grouped)\r\n\t\t\t\t\t.map(e => {\r\n\t\t\t\t\t\tvar perDayList = grouped[e];\r\n\t\t\t\t\t\tvar minTemp = _.minBy(perDayList, e => e.main.temp_min);\r\n\t\t\t\t\t\tvar maxTemp = _.maxBy(perDayList, e => e.main.temp_max);\r\n\t\t\t\t\t\tvar avg: IWeatherShortInfo = {\r\n\t\t\t\t\t\t\tclouds: Math.round(_.meanBy(perDayList, e => e.clouds.all)),\r\n\t\t\t\t\t\t\twindSpeed: +(_.meanBy(perDayList, e => e.wind.speed).toFixed(2)),\r\n\t\t\t\t\t\t\ttemp: +(_.meanBy(perDayList, e => e.main.temp).toFixed(2)),\r\n\t\t\t\t\t\t\ttemp_min: +(minTemp ? minTemp.main.temp_min : 0).toFixed(2),\r\n\t\t\t\t\t\t\ttemp_max: +(maxTemp ? maxTemp.main.temp_max : 0).toFixed(2),\r\n\t\t\t\t\t\t\tpressure: +(_.meanBy(perDayList, e => e.main.pressure).toFixed(2)),\r\n\t\t\t\t\t\t\thumidity: Math.round(_.meanBy(perDayList, e => e.main.humidity)),\r\n\t\t\t\t\t\t\tdescription: perDayList[0].weather[0].description,\r\n\t\t\t\t\t\t\ticon: perDayList[0].weather[0].icon,\r\n\t\t\t\t\t\t\tdate: perDayList[0].dt,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn avg;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tthis.setState({ swiperItemsData, currentWeather, fiveDaysThreeHoursWeather, isInFavourites: checkIfInFavourites(currentWeather.id) });\r\n\t\t\t})\r\n\t}\r\n\r\n\tonToggleIconClick = (cityId: number) => {\r\n\t\tconst isInFavourites = checkIfInFavourites(cityId);\r\n\t\tisInFavourites ? removeFromFavourites(cityId) : addToFavourites(cityId);\r\n\t\tthis.setState({ isInFavourites: !isInFavourites });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { currentWeather, swiperItemsData, fiveDaysThreeHoursWeather, isInFavourites } = this.state;\r\n\t\tconst country = (currentWeather && currentWeather.sys.country || \"\").toUpperCase();\r\n\t\tconst city = currentWeather && currentWeather.name;\r\n\t\tconst cityId = currentWeather && currentWeather.id;\r\n\r\n\t\treturn <div className=\"container body\">\r\n\t\t\t{city && <Header as=\"h1\">{city && city[0].toUpperCase() + city.substring(1) || ''}, {country}</Header>}\r\n\t\t\t{city && <Header as=\"h3\"><FormattedMessage id=\"city.weather_and_forcast\" defaultMessage=\"Current weather and forecast\" /></Header>}\r\n\t\t\t{cityId && <div style={{ float: 'right' }}>\r\n\t\t\t\t<HeartToggleIcon onClick={() => this.onToggleIconClick(cityId)} active={isInFavourites} />\r\n\t\t\t</div>}\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t{currentWeather && <WeatherSummaryTable currentWeather={currentWeather}></WeatherSummaryTable>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-9\">\r\n\t\t\t\t\t{fiveDaysThreeHoursWeather && currentWeather && <ChartsComponent currentWeather={currentWeather} fiveDaysThreeHoursWeather={fiveDaysThreeHoursWeather} />}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t{swiperItemsData.length !== 0 && <WeatherSwiper items={swiperItemsData}></WeatherSwiper>}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n}\r\n\r\nexport default CityScene;\r\n","import React from 'react';\r\nimport { Dropdown, Icon } from 'semantic-ui-react';\r\nimport classNames from 'classnames';\r\nimport { FormattedMessage, InjectedIntlProps, injectIntl, defineMessages } from 'react-intl';\r\n\r\ninterface IContinentsDropdownProps extends InjectedIntlProps {\r\n\tonContinentSelect: (item: IContinentItem) => void;\r\n\tclassName?: string;\r\n\tstyle?: React.CSSProperties;\r\n\toptions: IContinentItem[];\r\n}\r\n\r\nexport interface IContinentItem {\r\n\tname: React.ReactNode;\r\n\tlat: number;\r\n\tlon: number;\r\n\tzoom: number;\r\n}\r\n\r\nconst messages = defineMessages({\r\n\tdropdownText: {\r\n\t\tid: 'common.location',\r\n\t\tdefaultMessage: 'Location'\r\n\t}\r\n})\r\n\r\nconst ContinentsDropdownInternal: React.SFC<IContinentsDropdownProps> = (props) => {\r\n\tconst { onContinentSelect, className, style, options, intl } = props;\r\n\tconst classes = classNames(className, \"icon\");\r\n\r\n\tconst styles = {\r\n\t\tbackground: \"#00b5ad\",\r\n\t\tcolor: \"white\",\r\n\t\t...style\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Dropdown style={styles} text={intl.formatMessage(messages.dropdownText)} icon='location arrow' button labeled floating color=\"blue\" className={classes}>\r\n\t\t\t<Dropdown.Menu>\r\n\t\t\t\t<Dropdown.Header icon='map marker alternate' >\r\n\t\t\t\t\t<span><Icon name=\"map marker alternate\" /></span>\r\n\t\t\t\t\t<FormattedMessage id=\"map.filter_by_location\" defaultMessage=\"Filter by location\" />\r\n\t\t\t\t</Dropdown.Header>\r\n\t\t\t\t<Dropdown.Divider />\r\n\t\t\t\t{options.map((i, ind) => (\r\n\t\t\t\t\t<Dropdown.Item key={ind} onClick={() => onContinentSelect(i)} >{i.name}</Dropdown.Item>\r\n\t\t\t\t))}\r\n\t\t\t</Dropdown.Menu>\r\n\t\t</Dropdown>\r\n\t);\r\n};\r\n\r\nexport const ContinentsDropdown = injectIntl(ContinentsDropdownInternal);\r\n","import { Motion, spring } from \"react-motion\";\r\nimport geography from \"../world-50m.json\";\r\nimport { ComposableMap, ZoomableGroup, Geographies, Geography } from \"react-simple-maps\";\r\nimport React from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\ninterface IWorldMapProps {\r\n\tlat: number;\r\n\tlon: number;\r\n\tzoom: number;\r\n\tmapStyle?: React.CSSProperties;\r\n\tdefaultStyle?: React.CSSProperties;\r\n\thoverStyle?: React.CSSProperties;\r\n\tpressedStyle?: React.CSSProperties;\r\n\tonCountryClick?: (country: ICountry) => void;\r\n}\r\n\r\nexport interface ICountry {\r\n\tproperties: _.Dictionary<string>;\r\n\tid: string;\r\n}\r\n\r\nexport default class WorldMap extends React.Component<IWorldMapProps> {\r\n\r\n\tconstructor(props: IWorldMapProps) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\tonClick = (country: ICountry) => {\r\n\t\tconst { onCountryClick } = this.props;\r\n\t\tif (onCountryClick) {\r\n\t\t\tonCountryClick(country);\r\n\t\t}\r\n\t}\r\n\r\n\ttimeout?: NodeJS.Timeout;\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.timeout = setTimeout(() => {\r\n\t\t\tReactTooltip.rebuild()\r\n\t\t}, 100)\r\n\t}\r\n\r\n\tcomponentWillUnmount () {\r\n\t\tif (this.timeout) {\r\n\t\t\tclearTimeout(this.timeout)\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst { lat, lon, mapStyle, defaultStyle, hoverStyle, pressedStyle } = this.props;\r\n\t\tconst zoomProp = this.props.zoom;\r\n\r\n\t\tconst _defaultStyle = {\r\n\t\t\tfill: \"#ECEFF1\",\r\n\t\t\tstroke: \"#607D8B\",\r\n\t\t\tstrokeWidth: 0.75,\r\n\t\t\toutline: \"none\",\r\n\t\t\t...defaultStyle,\r\n\t\t};\r\n\t\tconst _hoverStyle = {\r\n\t\t\tfill: \"#CFD8DC\",\r\n\t\t\tstroke: \"#607D8B\",\r\n\t\t\tstrokeWidth: 0.75,\r\n\t\t\toutline: \"none\",\r\n\t\t\t...hoverStyle,\r\n\t\t}\r\n\t\tconst _pressedStyle = {\r\n\t\t\tfill: \"#FF5722\",\r\n\t\t\tstroke: \"#607D8B\",\r\n\t\t\tstrokeWidth: 0.75,\r\n\t\t\toutline: \"none\",\r\n\t\t\tpressedStyle,\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Motion\r\n\t\t\t\tdefaultStyle={{\r\n\t\t\t\t\tzoom: 1,\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: 20,\r\n\t\t\t\t}}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tzoom: spring(zoomProp, { stiffness: 210, damping: 20 }),\r\n\t\t\t\t\tx: spring(lat, { stiffness: 210, damping: 20 }),\r\n\t\t\t\t\ty: spring(lon, { stiffness: 210, damping: 20 }),\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{({ zoom, x, y }: any) => (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<ComposableMap\r\n\t\t\t\t\t\t\tprojectionConfig={{ scale: 205 }}\r\n\t\t\t\t\t\t\twidth={900}\r\n\t\t\t\t\t\t\theight={551}\r\n\t\t\t\t\t\t\tstyle={mapStyle}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ZoomableGroup center={[x, y]} zoom={zoom} disablePanning>\r\n\t\t\t\t\t\t\t\t<Geographies geography={geography}>\r\n\t\t\t\t\t\t\t\t\t{(geographies, projection) =>\r\n\t\t\t\t\t\t\t\t\t\tgeographies.map((geography: any, i) => geography.id !== \"010\" && (\r\n\t\t\t\t\t\t\t\t\t\t\t<Geography\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\tgeography={geography}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-tip={geography.properties.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tprojection={projection}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(data: any) => this.onClick(data)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefault: _defaultStyle,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thover: _hoverStyle,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpressed: _pressedStyle,\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Geographies>\r\n\t\t\t\t\t\t\t</ZoomableGroup>\r\n\t\t\t\t\t\t</ComposableMap>\r\n\t\t\t\t\t\t<ReactTooltip />\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</Motion>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport { IOWMCity } from '../../../common/common';\r\nimport { List } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface ICitiesListProps {\r\n\tcities: IOWMCity[];\r\n}\r\n\r\nexport const CitiesList: React.SFC<ICitiesListProps> = (props) => {\r\n\treturn (\r\n\t\t<List divided relaxed>\r\n\t\t\t{props.cities.map(c => (\r\n\t\t\t\t<List.Item key={c.id} style={{ paddingLeft: \"20px\" }}>\r\n\t\t\t\t\t<List.Content>\r\n\t\t\t\t\t\t<Link className=\"header\" to={`/cities/${c.id}`}>#{c.id}</Link>\r\n\t\t\t\t\t\t<List.Description style={{ fontSize: '1.1em' }} as='a'>{c.name}</List.Description>\r\n\t\t\t\t\t</List.Content>\r\n\t\t\t\t</List.Item>\r\n\t\t\t))}\r\n\t\t</List>\r\n\t);\r\n}","import React from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport './CitiesPagination.css';\r\n\r\ninterface CitiesPaginationProps {\r\n\tactivePage: number;\r\n\ttotalPages: number;\r\n\tonPageChange: (page: number) => void;\r\n}\r\n\r\nexport const CitiesPagination = (props: CitiesPaginationProps) => {\r\n\tconst {activePage, totalPages, onPageChange} = props;\r\n\treturn <div className=\"cities-pagination\">\r\n\t\t<div className=\"fgrow1 text-right\">\r\n\t\t\t<Icon name=\"arrow alternate circle left outline\" size=\"big\" color=\"teal\"\r\n\t\t\t\tdisabled={activePage === 1} onClick={() => onPageChange(activePage - 1)}/>\r\n\t\t</div>\r\n\t\t<div className=\"fgrow2 text-center\">\r\n\t\t\t{activePage}/{totalPages}\r\n\t\t</div>\r\n\t\t<div className=\"fgrow1\">\r\n\t\t\t<Icon name=\"arrow alternate circle right outline\" size=\"big\" color=\"teal\"\r\n\t\t\t\tdisabled={activePage === totalPages} onClick={() => onPageChange(activePage + 1)}/>\r\n\t\t</div>\r\n\t</div>;\r\n}\r\n","import React from 'react';\r\nimport \"./CountryInfoPanel.css\";\r\nimport { ICountry } from './WorldMap';\r\nimport { Header, Flag, Table, List, Icon, Pagination } from 'semantic-ui-react';\r\nimport { IOWMCity, IOWMCitiesByCountry } from '../../../common/common';\r\nimport { Link } from 'react-router-dom';\r\nimport { CitiesList } from './CitiesList';\r\nimport { CitiesPagination } from './CitiesPagination';\r\n\r\n\r\ninterface ICountryInfoPanelProps {\r\n\tcountry: ICountry;\r\n\tcities: IOWMCitiesByCountry;\r\n\tonClose: () => void;\r\n\tonPageChange: (newPage: number) => void;\r\n\tactivePage: number;\r\n\ttotalPages: number;\r\n}\r\n\r\nexport default class CoutnryInfoPanel extends React.Component<ICountryInfoPanelProps>  {\r\n\tconstructor(props: ICountryInfoPanelProps) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { country, cities, onClose, onPageChange, activePage, totalPages } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className=\"panel\">\r\n\t\t\t\t<div className=\"panel-header\">\r\n\t\t\t\t\t<div style={{ textAlign: \"right\" }}>\r\n\t\t\t\t\t\t<Icon onClick={onClose} name=\"times circle outline\" className=\"panel-close-icon\" color=\"teal\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Header as='h2' textAlign=\"center\" style={{ margin: \"-5px 10px 10px 10px\" }}>\r\n\t\t\t\t\t\t{cities.country ? <Link to={`cities/${cities.country.id}`}>{cities.country.name}</Link> : country.properties.name}\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"panel-body\">\r\n\t\t\t\t\t{cities && <CitiesList cities={cities.list} />}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"panel-footer\">\r\n\t\t\t\t\t<CitiesPagination activePage={activePage} totalPages={totalPages} onPageChange={onPageChange} />\r\n\t\t\t\t</div>\r\n\t\t\t</div >\r\n\t\t)\r\n\t}\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { ContinentsDropdown, IContinentItem } from \"./components/ContinentsDropdown\";\r\nimport \"./index.css\";\r\nimport WorldMap, { ICountry } from \"./components/WorldMap\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport CountryInfoPanel from \"./components/CountryInfoPanel\";\r\nimport { CountryHelperMethods, getOpenWeatherMapCitiesByCountryAlpha2, IOWMCity, IOWMCitiesByCountry } from \"../../common/common\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\ninterface IMapSceneState {\r\n\tlat: number;\r\n\tlon: number;\r\n\tzoom: number;\r\n\tcountry?: ICountry;\r\n\tcities?: IOWMCitiesByCountry;\r\n\tactivePage?: number;\r\n}\r\n\r\ninterface IMapSceneProps extends RouteComponentProps { };\r\n\r\nclass MapScene extends Component<IMapSceneProps, IMapSceneState> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tlat: 0,\r\n\t\t\tlon: 20,\r\n\t\t\tzoom: 1,\r\n\t\t}\r\n\t}\r\n\r\n\tcitiesPerPage = 50;\r\n\r\n\thandleContinentClick = (item: IContinentItem) => {\r\n\t\tthis.setState({\r\n\t\t\tlat: item.lat,\r\n\t\t\tlon: item.lon,\r\n\t\t\tzoom: item.zoom,\r\n\t\t})\r\n\t}\r\n\tcountryClick = (country: ICountry) => {\r\n\t\tconst alpha2 = CountryHelperMethods.convertAlpha3ToAlpha2(country.id) || \"\";\r\n\t\tgetOpenWeatherMapCitiesByCountryAlpha2(alpha2, 0, this.citiesPerPage)\r\n\t\t\t.then(res => {\r\n\t\t\t\tthis.setState({ cities: res, country, activePage: 1 })\r\n\t\t\t});\r\n\t}\r\n\r\n\tonPanelClose = () => {\r\n\t\tthis.setState({ country: undefined, cities: undefined, activePage: undefined })\r\n\t}\r\n\r\n\tonPageChange = (page: number) => {\r\n\t\tconst { country } = this.state;\r\n\t\tconst skip = (page - 1) * this.citiesPerPage;\r\n\t\tconst alpha2 = CountryHelperMethods.convertAlpha3ToAlpha2(country && country.id || \"\") || \"\";\r\n\t\tgetOpenWeatherMapCitiesByCountryAlpha2(alpha2, skip, this.citiesPerPage)\r\n\t\t\t.then(res => {\r\n\t\t\t\tthis.setState({ cities: res, activePage: page })\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst dropDownStye: React.CSSProperties = {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tleft: \"10px\",\r\n\t\t};\r\n\t\tconst mapStyle: React.CSSProperties = {\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: \"auto\",\r\n\t\t\tmaxHeight: \"100%\",\r\n\t\t\tmarginTop: \"-15px\"\r\n\t\t};\r\n\t\tconst { lat, lon, zoom, country, cities, activePage } = this.state;\r\n\t\tconst itemsList = [\r\n\t\t\t{ name: <FormattedMessage id=\"map.world\" defaultMessage=\"World\" />, lat: 0, lon: 20, zoom: 1 },\r\n\t\t\t{ name: <FormattedMessage id=\"map.europe\" defaultMessage=\"Europe\" />, lat: 15.795367, lon: 48.587675, zoom: 3 },\r\n\t\t\t{ name: <FormattedMessage id=\"map.africa\" defaultMessage=\"Africa\" />, lon: 3.997508, lat: 9.319308, zoom: 2 },\r\n\t\t\t{ name: <FormattedMessage id=\"map.asia\" defaultMessage=\"Asia\" />, lon: 35.139295, lat: 84.202121, zoom: 2 },\r\n\t\t\t{ name: <FormattedMessage id=\"map.australia\" defaultMessage=\"Australia\" />, lon: -18.470799, lat: 135.205220, zoom: 2.5 },\r\n\t\t\t{ name: <FormattedMessage id=\"map.north_america\" defaultMessage=\"North America\" />, lon: 42.137710, lat: -100.956889, zoom: 2 },\r\n\t\t\t{ name: <FormattedMessage id=\"map.south_america\" defaultMessage=\"South America\" />, lon: -15.783315, lat: -59.911967, zoom: 2 },\r\n\t\t];\r\n\t\tlet totalPages = cities ? Math.floor((cities.total / this.citiesPerPage) + 1) : 1;\r\n\t\treturn (\r\n\t\t\t<div className=\"streched-container\" >\r\n\t\t\t\t<ContinentsDropdown options={itemsList} style={dropDownStye} onContinentSelect={this.handleContinentClick} />\r\n\t\t\t\t<WorldMap lat={lat} lon={lon} zoom={zoom} mapStyle={mapStyle} onCountryClick={this.countryClick} />\r\n\t\t\t\t{country && cities && <CountryInfoPanel activePage={activePage || 1} totalPages={totalPages} onPageChange={this.onPageChange} country={country} cities={cities} onClose={this.onPanelClose} />}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default MapScene\r\n\r\n","import React from \"react\";\r\nimport { Menu, } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\ninterface IPreferencesNavBarProps {\r\n\tactiveItem: string;\r\n\thandleItemClick: (e: any, data: any) => void;\r\n}\r\n\r\nconst PreferencesNavBar = (props: IPreferencesNavBarProps) => {\r\n\tconst { activeItem, handleItemClick } = props;\r\n\treturn <React.Fragment>\r\n\t\t<Menu size='huge' pointing>\r\n\t\t\t<Menu.Item name=\"Favourites\" color='teal' active={activeItem === 'Favourites'} onClick={handleItemClick} >\r\n\t\t\t\t<FormattedMessage id=\"preferences.favourites\" defaultMessage=\"Favourites\"/>\r\n\t\t\t</Menu.Item>\r\n\t\t\t<Menu.Item name=\"Settings\" color='teal' active={activeItem === 'Settings'} onClick={handleItemClick} >\r\n\t\t\t\t<FormattedMessage id=\"preferences.settings\" defaultMessage=\"Settings\"/>\r\n\t\t\t</Menu.Item>\r\n\t\t</Menu>\r\n\t</React.Fragment>\r\n}\r\n\r\nexport default PreferencesNavBar;","import * as React from 'react';\r\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\ninterface IDeleteFromFavouritesModalProps {\r\n\tshowModal: boolean,\r\n\tonClose: () => void,\r\n\tonConfirm: () => void\r\n}\r\n\r\nexport const DeleteFromFavouritesModal = (props: IDeleteFromFavouritesModalProps) => {\r\n\r\n\tconst { showModal, onClose, onConfirm } = props;\r\n\treturn <Modal open={showModal} basic size=\"small\" closeOnDimmerClick={true} onClose={onClose}>\r\n\t\t<Header >\r\n\t\t\t<span><Icon name=\"trash\" /></span>\r\n\t\t\t<FormattedMessage id=\"remove_city_modal.header\" defaultMessage=\"Remove city from Favourites\" />\r\n\t\t</Header>\r\n\t\t<Modal.Content>\r\n\t\t\t<p><FormattedMessage id=\"remove_city_modal.content\" defaultMessage=\"Are you sure you want to remove the city from your favourites list?\" /></p>\r\n\t\t</Modal.Content>\r\n\t\t<Modal.Actions>\r\n\t\t\t<Button inverted color=\"teal\" onClick={onClose}>\r\n\t\t\t\t<Icon name=\"remove\" /> <FormattedMessage id=\"common.cancel\" defaultMessage=\"Cancel\" />\r\n\t\t\t</Button>\r\n\t\t\t<Button inverted color=\"red\" onClick={onConfirm}>\r\n\t\t\t\t<Icon name=\"checkmark\" /> <FormattedMessage id=\"common.delete\" defaultMessage=\"Delete\" />\r\n\t\t\t</Button>\r\n\t\t</Modal.Actions>\r\n\t</Modal>\r\n}","import * as React from 'react';\r\nimport { ICurrentWeather } from '../../../models/ICurrentWeather';\r\nimport { Pagination, Icon, Button, Segment } from 'semantic-ui-react';\r\nimport { ListWeatherItem } from '../../../components/ListWeatherItem';\r\nimport { DeleteFromFavouritesModal } from '../../../components/DeleteFromFavouritesModal';\r\n\r\ninterface IFavouritesSectionProps {\r\n\tfavouritesWeather: ICurrentWeather[],\r\n\tactivePage: number,\r\n\ttotalPages: number,\r\n\tdeleteFromFavourites: (cityId: number) => void\r\n\tonPageChange: (page: number) => void,\r\n}\r\n\r\ninterface IFavouritesSectionState {\r\n\tshowModal: boolean,\r\n\tcityIdForDelete?: number\r\n}\r\n\r\nexport class FavouritesSection extends React.Component<IFavouritesSectionProps, IFavouritesSectionState> {\r\n\tconstructor(props: Readonly<IFavouritesSectionProps>) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = { showModal: false };\r\n\t}\r\n\r\n\tonModalClose = () => {\r\n\t\tthis.setState({ showModal: false, cityIdForDelete: undefined });\r\n\t}\r\n\r\n\tonTrashButtonClick = (cityId: number) => () => {\r\n\t\tthis.setState({ showModal: true, cityIdForDelete: cityId });\r\n\t}\r\n\r\n\tonModalConfirm = () => {\r\n\t\tconst cityId = this.state.cityIdForDelete || 0;\r\n\t\tthis.setState({ showModal: false, cityIdForDelete: undefined });\r\n\t\tthis.props.deleteFromFavourites(cityId);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { favouritesWeather, onPageChange, totalPages, activePage } = this.props;\r\n\t\tconst { showModal } = this.state;\r\n\r\n\t\treturn <Segment>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-xs-12\">\r\n\t\t\t\t\t{favouritesWeather.map(i => <ListWeatherItem\r\n\t\t\t\t\t\ticonButton={<Button onClick={this.onTrashButtonClick(i.id)} icon style={{ padding: 0, backgroundColor: 'transparent' }} >\r\n\t\t\t\t\t\t\t<Icon name=\"trash\" color=\"grey\" size=\"large\" />\r\n\t\t\t\t\t\t</Button>}\r\n\t\t\t\t\t\tcurrentWeather={i}\r\n\t\t\t\t\t\tkey={i.id} />)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-xs-12\">\r\n\t\t\t\t\t{favouritesWeather.length > 0 && <Pagination\r\n\t\t\t\t\t\tstyle={{ float: 'right', marginTop: '10px' }}\r\n\t\t\t\t\t\tprevItem={{ disabled: activePage === 1, content: '⟨' }}\r\n\t\t\t\t\t\tnextItem={{ disabled: activePage === totalPages, content: '⟩' }}\r\n\t\t\t\t\t\ttotalPages={totalPages}\r\n\t\t\t\t\t\tonPageChange={(e: any, d: any) => onPageChange(d.activePage)}\r\n\t\t\t\t\t\tdefaultActivePage={1}\r\n\t\t\t\t\t\tfirstItem={null}\r\n\t\t\t\t\t\tlastItem={null} /> || <div>There is no cities in Favourites.</div>}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<DeleteFromFavouritesModal\r\n\t\t\t\tshowModal={showModal}\r\n\t\t\t\tonClose={this.onModalClose}\r\n\t\t\t\tonConfirm={this.onModalConfirm} />\r\n\t\t</Segment >\r\n\t}\r\n}","import * as React from 'react';\r\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\ninterface IResetSettingsModalProps {\r\n\tshowModal: boolean,\r\n\tonClose: () => void,\r\n\tonConfirm: () => void\r\n}\r\n\r\nexport const ResetSettingsModal = (props: IResetSettingsModalProps) => {\r\n\r\n\tconst { showModal, onClose, onConfirm } = props;\r\n\treturn <Modal open={showModal} basic size=\"small\" closeOnDimmerClick={true} onClose={onClose}>\r\n\t\t<Header>\r\n\t\t\t<span><Icon name=\"settings\" /></span>\r\n\t\t\t<FormattedMessage id=\"reset_settings_modal.header\" defaultMessage=\"Reset settings\" />\r\n\t\t</Header>\r\n\t\t<Modal.Content>\r\n\t\t\t<p><FormattedMessage id=\"reset_settings_modal.content\" defaultMessage=\"Are you sure you want to remove your settings and set default ones?\" /></p>\r\n\t\t</Modal.Content>\r\n\t\t<Modal.Actions>\r\n\t\t\t<Button inverted color=\"teal\" onClick={onClose}>\r\n\t\t\t\t<Icon name=\"remove\" /> <FormattedMessage id=\"common.cancel\" defaultMessage=\"Cancel\" />\r\n\t\t\t</Button>\r\n\t\t\t<Button inverted color=\"red\" onClick={onConfirm}>\r\n\t\t\t\t<Icon name=\"checkmark\" /> <FormattedMessage id=\"common.reset\" defaultMessage=\"Reset\" />\r\n\t\t\t</Button>\r\n\t\t</Modal.Actions>\r\n\t</Modal>\r\n}","import * as React from 'react';\r\nimport { Segment, Button } from 'semantic-ui-react';\r\nimport './SettingsSection.css'\r\nimport { setSettings, resetSettings, getSettingsOrDefault } from '../../../common/localStorageService';\r\nimport { ISettings } from '../../../models/ISettings';\r\nimport { ResetSettingsModal } from '../../../components/ResetSettingsModal';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\ninterface ISettingsSectionProps {\r\n\tonLocaleChange: (locale: string) => void;\r\n}\r\n\r\ninterface ISettingsSectionState {\r\n\tlanguage: string,\r\n\ttempMetric: string,\r\n\thoursFormat: string,\r\n\tshowModal: boolean,\r\n\tisApplyDisabled: boolean\r\n}\r\n\r\nexport class SettingsSection extends React.Component<ISettingsSectionProps, ISettingsSectionState> {\r\n\r\n\tconstructor(props: Readonly<ISettingsSectionProps>) {\r\n\t\tsuper(props);\r\n\r\n\t\tconst settings: ISettings = getSettingsOrDefault();\r\n\t\tconst { language, tempMetric, hoursFormat } = settings;\r\n\r\n\t\tthis.state = { language, tempMetric, hoursFormat, showModal: false, isApplyDisabled: true };\r\n\r\n\t}\r\n\r\n\thandleLanguageChange = (value: string) => {\r\n\t\tconst settings: ISettings = getSettingsOrDefault();\r\n\t\tconst { hoursFormat, tempMetric } = this.state;\r\n\r\n\t\tconst isApplyDisabled = settings.language === value\r\n\t\t\t&& settings.hoursFormat === hoursFormat\r\n\t\t\t&& settings.tempMetric === tempMetric;\r\n\r\n\t\tthis.setState({ language: value, isApplyDisabled });\r\n\t}\r\n\r\n\thandleTempMetricChange = (value: string) => {\r\n\r\n\t\tconst settings: ISettings = getSettingsOrDefault();\r\n\t\tconst { language, hoursFormat } = this.state;\r\n\r\n\t\tconst isApplyDisabled = settings.language === language\r\n\t\t\t&& settings.hoursFormat === hoursFormat\r\n\t\t\t&& settings.tempMetric === value;\r\n\t\t\t\r\n\t\tthis.setState({ tempMetric: value, isApplyDisabled });\r\n\t}\r\n\r\n\thandleHoursFormatChange = (value: string) => {\r\n\t\tconst settings: ISettings = getSettingsOrDefault();\r\n\t\tconst { language, tempMetric } = this.state;\r\n\r\n\t\tconst isApplyDisabled = settings.language === language\r\n\t\t\t&& settings.hoursFormat === value\r\n\t\t\t&& settings.tempMetric === tempMetric;\r\n\r\n\t\tthis.setState({ hoursFormat: value, isApplyDisabled });\r\n\t}\r\n\r\n\tonReset = () => {\r\n\t\tthis.setState({ showModal: true });\r\n\t}\r\n\r\n\tonResetCancel = () => {\r\n\t\tthis.setState({ showModal: false });\r\n\t}\r\n\r\n\tonResetConfirm = () => {\r\n\t\tconst settings: ISettings = resetSettings();\r\n\t\tconst { language, tempMetric, hoursFormat } = settings;\r\n\t\tconst { onLocaleChange } = this.props;\r\n\r\n\t\tthis.setState({ language, tempMetric, hoursFormat, showModal: false });\r\n\t\tonLocaleChange(language);\r\n\t}\r\n\r\n\tonApply = () => {\r\n\t\tconst { language, tempMetric, hoursFormat } = this.state;\r\n\t\tconst { onLocaleChange } = this.props;\r\n\t\tconst settings: ISettings = { language, tempMetric, hoursFormat }\r\n\t\tsetSettings(settings);\r\n\t\tonLocaleChange(language);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { language, tempMetric, hoursFormat, showModal, isApplyDisabled } = this.state;\r\n\r\n\t\treturn <Segment>\r\n\t\t\t<div className=\"settings-list-item row\">\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<FormattedMessage id=\"common.language\" defaultMessage=\"Language\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-10\">\r\n\t\t\t\t\t<Button.Group>\r\n\t\t\t\t\t\t<Button active={false} value=\"bg\" color={language === 'bg' ? 'teal' : undefined} onClick={(event: any, data: any) => this.handleLanguageChange(data.value)}>BG</Button>\r\n\t\t\t\t\t\t<Button.Or />\r\n\t\t\t\t\t\t<Button active={false} value=\"en\" color={language === 'en' ? 'teal' : undefined} onClick={(event: any, data: any) => this.handleLanguageChange(data.value)}>EN</Button>\r\n\t\t\t\t\t</Button.Group>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"settings-list-item row\">\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<FormattedMessage id=\"common.temp_metric\" defaultMessage=\"Temperature metric\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-10\">\r\n\t\t\t\t\t<Button.Group>\r\n\t\t\t\t\t\t<Button value=\"c\" color={tempMetric === 'c' ? 'teal' : undefined} onClick={(event: any, data: any) => this.handleTempMetricChange(data.value)}>°C</Button>\r\n\t\t\t\t\t\t<Button.Or />\r\n\t\t\t\t\t\t<Button value=\"k\" color={tempMetric === 'k' ? 'teal' : undefined} onClick={(event: any, data: any) => this.handleTempMetricChange(data.value)}>°K</Button>\r\n\t\t\t\t\t\t<Button.Or />\r\n\t\t\t\t\t\t<Button value=\"f\" color={tempMetric === 'f' ? 'teal' : undefined} onClick={(event: any, data: any) => this.handleTempMetricChange(data.value)}>°F</Button>\r\n\t\t\t\t\t</Button.Group>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"settings-list-item row\">\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<FormattedMessage id=\"common.hours_format\" defaultMessage=\"Hours format\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-10\">\r\n\t\t\t\t\t<Button.Group>\r\n\t\t\t\t\t\t<Button value=\"12\" color={hoursFormat === '12' ? 'teal' : undefined} onClick={(event: any, data: any) => this.handleHoursFormatChange(data.value)}>12</Button>\r\n\t\t\t\t\t\t<Button.Or />\r\n\t\t\t\t\t\t<Button value=\"24\" color={hoursFormat === '24' ? 'teal' : undefined} onClick={(event: any, data: any) => this.handleHoursFormatChange(data.value)}>24</Button>\r\n\t\t\t\t\t</Button.Group>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<Button floated=\"right\" color=\"teal\" basic onClick={this.onReset}>\r\n\t\t\t\t\t\t<FormattedMessage id=\"common.reset\" defaultMessage=\"Reset\" />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button disabled={isApplyDisabled} floated=\"right\" color=\"teal\" onClick={this.onApply}>\r\n\t\t\t\t\t\t<FormattedMessage id=\"common.apply\" defaultMessage=\"Apply\" />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<ResetSettingsModal showModal={showModal} onClose={this.onResetCancel} onConfirm={this.onResetConfirm} />\r\n\t\t</Segment>;\r\n\t}\r\n}","import * as React from 'react';\r\nimport PreferencesNavBar from './components/PreferencesNavBar';\r\nimport { FavouritesSection } from './components/FavouritesSection';\r\nimport { ICurrentWeather } from '../../models/ICurrentWeather';\r\nimport { getFavourites, removeFromFavourites } from '../../common/localStorageService';\r\nimport weatherApi from '../../api/WeatherApi';\r\nimport { SettingsSection } from './components/SettingsSection';\r\n\r\ninterface IPreferencesSceneState {\r\n\tactiveTab: string,\r\n\tpageItems: ICurrentWeather[];\r\n\tactivePage: number,\r\n\ttotalPages: number\r\n}\r\n\r\ninterface IPreferencesSceneProps {\r\n\tonLocaleChange: (locale: string) => void;\r\n}\r\n\r\nexport class PreferencesScene extends React.Component<IPreferencesSceneProps, IPreferencesSceneState> {\r\n\r\n\tconstructor(props: Readonly<IPreferencesSceneProps>) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tactiveTab: \"Favourites\",\r\n\t\t\tpageItems: [],\r\n\t\t\tactivePage: 1,\r\n\t\t\ttotalPages: 0,\r\n\t\t}\r\n\t}\r\n\r\n\titemsPerPage = 4;\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst favourites: number[] = getFavourites();\r\n\t\tlet { activePage } = this.state;\r\n\t\tconst skip = (activePage - 1) * this.itemsPerPage;\r\n\t\tconst take = Math.min(this.itemsPerPage, favourites.length - skip);\r\n\t\tconst totalPages = Math.ceil(favourites.length / 4);\r\n\r\n\t\tlet pageItems: ICurrentWeather[] = [];\r\n\t\tlet promises: Promise<void | ICurrentWeather>[] = [];\r\n\r\n\t\tfor (let i = skip; i < skip + take; i++) {\r\n\t\t\tpromises.push(weatherApi.getCurrentWeatherById(favourites[i]).then(cityWeather => {\r\n\t\t\t\tpageItems.push(cityWeather);\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\tPromise.all(promises).then(() => {\r\n\t\t\tthis.setState({ pageItems, totalPages });\r\n\t\t});\r\n\t}\r\n\r\n\tremoveCityFromFavouritesList = (cityId: number) => {\r\n\t\tremoveFromFavourites(cityId);\r\n\t\tlet { activePage } = this.state;\r\n\t\tconst favourites: number[] = getFavourites();\r\n\t\tconst favouritesCount = favourites.length;\r\n\t\tconst totalPages = Math.ceil(favourites.length / 4);\r\n\r\n\t\tif (activePage > totalPages) {\r\n\t\t\tactivePage--;\r\n\t\t}\r\n\r\n\t\tif (activePage === 0) {\r\n\t\t\tthis.setState({ pageItems: [], totalPages: 0, activePage })\r\n\t\t}\r\n\r\n\t\tlet skip = (activePage - 1) * this.itemsPerPage;\r\n\t\tlet take = Math.min(this.itemsPerPage, favouritesCount - skip);\r\n\r\n\t\tlet pageItems: ICurrentWeather[] = [];\r\n\t\tlet promises: Promise<void | ICurrentWeather>[] = [];\r\n\r\n\t\tfor (let i = skip; i < skip + take; i++) {\r\n\t\t\tpromises.push(weatherApi.getCurrentWeatherById(favourites[i]).then(cityWeather => {\r\n\t\t\t\tpageItems.push(cityWeather);\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\tPromise.all(promises).then(() => {\r\n\t\t\tthis.setState({ pageItems, totalPages, activePage });\r\n\t\t});\r\n\t}\r\n\r\n\tonNavBarItemClick = (activeItem: string) => {\r\n\t\tthis.setState({ activeTab: activeItem });\r\n\t}\r\n\r\n\tonPageChange = (activePage: number) => {\r\n\t\tconst favourites: number[] = getFavourites();\r\n\t\tconst skip = (activePage - 1) * this.itemsPerPage;\r\n\t\tconst take = Math.min(this.itemsPerPage, favourites.length - skip);\r\n\r\n\t\tlet pageItems: ICurrentWeather[] = [];\r\n\t\tlet promises: Promise<void | ICurrentWeather>[] = [];\r\n\r\n\t\tfor (let i = skip; i < skip + take; i++) {\r\n\t\t\tpromises.push(weatherApi.getCurrentWeatherById(favourites[i]).then(cityWeather => {\r\n\t\t\t\tpageItems.push(cityWeather);\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\tPromise.all(promises).then(() => {\r\n\t\t\tthis.setState({ pageItems, activePage });\r\n\t\t});\r\n\t}\r\n\r\n\tdeleteFromFavourites = (cityId: number) => {\r\n\t\tthis.removeCityFromFavouritesList(cityId);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { activeTab, activePage, pageItems, totalPages } = this.state;\r\n\t\tconst { onLocaleChange } = this.props;\r\n\r\n\t\treturn <div className=\"container body\">\r\n\t\t\t<PreferencesNavBar activeItem={activeTab} handleItemClick={(e: any, data: { name: string }) => this.onNavBarItemClick(data.name)} />\r\n\t\t\t{activeTab === 'Favourites' && <FavouritesSection\r\n\t\t\t\tfavouritesWeather={pageItems}\r\n\t\t\t\tactivePage={activePage}\r\n\t\t\t\tonPageChange={this.onPageChange}\r\n\t\t\t\ttotalPages={totalPages}\r\n\t\t\t\tdeleteFromFavourites={this.deleteFromFavourites} />}\r\n\t\t\t{activeTab === 'Settings' && <SettingsSection onLocaleChange={onLocaleChange}/>}\r\n\t\t</div>\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Layout } from './Layout';\r\nimport { Route, Switch, Redirect } from 'react-router';\r\nimport AboutScene from './scenes/AboutScene';\r\nimport HomeScene from './scenes/HomeScene';\r\nimport CityScene from './scenes/CityScene';\r\nimport MapScene from './scenes/MapScene';\r\nimport { PreferencesScene } from './scenes/PreferencesScene';\r\n\r\ninterface IAppProps {\r\n\tonLocaleChange: (locale: string) => void;\r\n}\r\n\r\nclass App extends Component<IAppProps> {\r\n\tconstructor(props: Readonly<IAppProps>) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { onLocaleChange } = this.props;\r\n\t\treturn <Layout>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/home\" component={HomeScene} />\r\n\t\t\t\t{/* <Route path='/about' component={AboutScene} /> */}\r\n\t\t\t\t<Route path='/cities/:city' component={CityScene} />\r\n\t\t\t\t<Route path='/map' component={MapScene} />\r\n\t\t\t\t<Route path='/preferences' component={() => <PreferencesScene onLocaleChange={onLocaleChange}/>} />\r\n\t\t\t\t<Redirect to=\"/home\" />\r\n\t\t\t</Switch>\r\n\t\t</Layout>;\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport '../node_modules/swiper/dist/css/swiper.css';\r\nimport '../node_modules/react-id-swiper/src/styles/css/swiper.css'\r\nimport './bootstrap/css/bootstrap-theme.css';\r\nimport './bootstrap/css/bootstrap.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { IntlProvider, addLocaleData } from 'react-intl';\r\nimport locale_en from 'react-intl/locale-data/en';\r\nimport locale_bg from 'react-intl/locale-data/bg';\r\nimport messages_bg from \"./translations/bg.json\";\r\nimport messages_en from \"./translations/en.json\";\r\nimport { getSettingsOrDefault } from './common/localStorageService';\r\n\r\nconst messages: any = {\r\n\t'bg': messages_bg,\r\n\t'en': messages_en\r\n};\r\n\r\nexport const language = 'bg'\r\n\r\naddLocaleData([...locale_en, ...locale_bg]);\r\n\r\ninterface IStatefulIntlProvider {\r\n\tlocale: string;\r\n}\r\n\r\nclass StatefulIntlProvider extends React.Component<{}, IStatefulIntlProvider> {\r\n\tconstructor(props: Readonly<{}>) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tlocale: getSettingsOrDefault().language\r\n\t\t}\r\n\t}\r\n\r\n\tonLocaleChange = (locale: string) => {\r\n\t\tthis.setState({ locale });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { locale } = this.state;\r\n\t\treturn (\r\n\t\t\t<IntlProvider locale={locale} messages={messages[locale]}>\r\n\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t<App onLocaleChange={this.onLocaleChange}/>\r\n\t\t\t\t</BrowserRouter>\r\n\t\t\t</IntlProvider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nReactDOM.render(<StatefulIntlProvider />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}